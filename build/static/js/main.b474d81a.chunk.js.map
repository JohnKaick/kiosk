{"version":3,"sources":["serviceWorker.js","components/painel.js","app/api.js","produto/api.js","produto/ModalConfirmaComponent.js","carrinho/api.js","produto/CompraComponent.js","carrinho/ModalFinalizarComponent.js","carrinho/ListaComponent.js","pedido/api.js","distribuidor/api.js","categoria/api.js","distribuidor/ModalProdutoComponent.js","distribuidor/ModalProdutoEditarComponent.js","pedido/ListaComponent.js","pedido/DetalheComponent.js","components/NavBar.js","cliente/api.js","cliente/ModalRemoveComponent.js","cliente/ListaComponent.js","distribuidor/ModalRemoveComponent.js","distribuidor/ListaComponent.js","distribuidor/CadastroComponent.js","produto/ModalCadastroComponent.js","produto/EstoqueComponent.js","categoria/ModalComponent.js","categoria/ListaComponent.js","cliente/CadastroComponent.js","conta/LoginDistribuidorComponent.js","conta/api.js","pedido/CadastroClienteComponent.js","pedido/DetalheClienteComponent.js","distribuidor/CadastroClienteComponent.js","app/route.js","index.js"],"names":["Boolean","window","location","hostname","match","painel","props","react_default","a","createElement","style","padding","api","axios","create","baseURL","urlStorage","getKeep","distribuidorId","get","getAll","data","put","nome","descricao","valor","categoriaId","upload","id","post","ModalConfirmar","state","open","observacao","close","_this","setState","onOpen","onChange","e","Object","defineProperty","target","name","value","onCadastrar","clienteId","produto","produtoId","_id","imagemPath","quantidade","then","onQtsDefault","onCarrinho","Modal","this","trigger","children","size","Header_Header","icon","content","Content","Form","TextArea","label","Actions","Button","onClick","Icon","primary","React","Component","withRouter","ListarComponent","produtos","grupos","capa","online","onGrupoSelected","_ref","forEach","g","categoria","onMais","prd","novoPrd","p","push","onMenos","onKeep","pdd","console","log","catch","err","_this$state","history","_this2","_this$props$match$par","params","res","distribuidor","concat","time2","time","Date","getTime","_this3","_this$state2","Container","as","marginTop","floated","Image","src","fluid","paddingTop","paddingBottom","fontSize","Dropdown","button","float","placeholder","selection","options","map","i","key","text","Item","Group","divided","unstackable","Header","Description","Extra","marginBottom","ModalConfirmaComponent","circular","color","basic","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","onPedido","inverted","CarrinhoComponent","carrinho","valorTotal","getCarrinho","pdds","total","onRemover","delCarrinho","onMenu","_this$state3","addPedido","length","Message","info","List","avatar","ModalFinalizarComponent","positive","removeProduto","uploadProduto","getCliente","getAllProduto","getAllDistribuidor","getAllPagamento","CadastroProdutoModalComponent","modalOpen","tabSelecione","tabCadastro","msgError","nvNome","nvDescricao","nvValor","nvCategorias","nvCategoria","nvImagemPath","nvImagem","nvFile","onClose","onCategoriaSelected","onChangeImagem","file","files","URL","createObjectURL","onTab","onSelect","onSalvar","novaImagemPath","novoProdutoId","FormData","append","getProdutos","link","margin","Responsive","onlyMobile","Segment","onSubmit","rounded","Input","width","type","cursor","h","Grid","Column","wrapped","fileInput","click","display","ref","Field","control","Select","minWidth","onlyTablet","tertiary","attached","compact","warning","categorias","objectSpread","c","PedidoComponent","onGet","tab","tabPedido","tabProduto","tabCliente","toConsumableArray","onRemoverProduto","prds","onUploadProduto","onUploadProdutoSelect","onCadastrarCliente","pedidos","clientes","getPedido","marginLeft","cliente","Meta","createdAt","toLocaleDateString","celular","endereco","nomeEndereco","numero","complemento","bairro","cep","cidade","estado","onPedidoDetalhe","ModalProdutoComponent","vertical","ModalProdutoEditarComponent","email","telefone","onClienteDetalhe","onFinalizar","getPedidoDetalhe","delete","_this4","Menu","pointing","secondary","NavLink","to","cpf","rg","update","remove","ClienteModalRemoveComponent","onRemove","ClienteComponent","tabDetalhe","getUpdate","onEditar","onUpload","codId","Row","ModalRemoveComponent","secundary","razaoSocial","getDistribuidor","DistribuidorComponent","distribuidores","activeIndex","onUploadCliente","uploadCliente","onUploadClienteSelect","onAtivar","onEditarCliente","handleClick","titleProps","index","newIndex","cnpj","responsavel","dadosPagamento","pagamento","active","d","distribuidor_ModalRemoveComponent","nomeCompleto","marginRight","Accordion","Title","entrega","_React$createElement","DistribuidorModalComponent","contaId","pagamentoId","login","senha","pgNomeCompleto","pgCpf","pgRg","pgEmail","pgCelular","pgNomeEndereco","pgNumero","pgComplemento","pgCep","pgBairro","pgCidade","pgEstado","pagamentos","checked","image","onVoltar","toggle","onPagamentoSelected","onDistribuidorSelected","_ref2","pgDados","img","numeto","conta","cat","required","pg","Checkbox","ProdutoModalComponent","categoria_nome","ProdutoEstoqueComponent","ModalCadastroComponent","CategoriaModalComponent","tipo","editDistribuidor","editPagamento","addProduto","addDistribuidor","addPagamento","delProduto","delDistribuidor","delPagamento","CategoriaComponent","columns","Table","selectable","HeaderCell","ModalComponent","Body","assign","Cell","ClienteModalCadastroComponent","_this$state4","dist","LoginComponent","onLogin","usuario","error","ClienteModalCadastroMobileComponent","distribuidorCodId","onDesativar","danger","BrowserRouter","Switch","Route","path","render","component","LoginDistribuidorComponent","exact","CompraComponent","DetalhesComponent","CadastroClienteComponent","DetalheClienteComponent","NavBar","ClienteCadastroComponent","DistribuidorCadastroComponent","DistribuidorCadastroClienteComponent","EstoqueComponent","Redirect","Painel","ReactDOM","route_default","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b474d81a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nexport default props => (\n    <h2 style={{ padding: 20 }}>Bem vindo SmartListening</h2>\n)","import axios from 'axios'\n\nexport default axios.create({\n    baseURL: 'http://localhost:7000/api',\n});\nexport const urlStorage = 'http://localhost:7000'\n\nexport function getKeep(distribuidorId) {\n    return axios.get('/keepalive/keepalive/' + distribuidorId)\n}","import axios from './../app/api'\n\nexport function getAll() {\n    return axios.get('/produto/listar')\n}\n\nexport function create(data) {\n    return axios.put('/produto/cadastrar', {\n        nome: data.nome,\n        descricao: data.descricao,\n        valor: data.valor,\n        categoriaId: data.categoriaId,\n    })\n}\n\nexport function update(data) {\n    return axios.post('/produto/editar/' + data.id, {\n        nome: data.nome,\n        descricao: data.descricao,\n        valor: data.valor,\n        categoriaId: data.categoriaId,\n    })\n}\n\nexport function remove(id) {\n    return axios.delete('/produto/remover/' + id)\n}\n\nexport function upload(data, id) {\n    return axios.post('/produto/upload/' + id, data)\n}\n\nexport function getDistribuidor(id) {\n    return axios.get('/produto/listar/distribuidor/' + id)\n}","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Modal, Header, Button, Icon, Form } from 'semantic-ui-react';\nimport { addCarrinho } from '../carrinho/api';\n\nclass ModalConfirmar extends React.Component {\n\n    state = {\n        open: false,\n        observacao: ''\n    }\n\n    close = () => {\n        this.setState({ open: false })\n    }\n\n    onOpen = () => {\n        this.setState({ open: true })\n    }\n\n    onChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    onCadastrar = () => {\n        addCarrinho(this.props.produto, this.props.distribuidorId, this.props.clienteId, this.state.observacao).then(() => {\n            this.close()\n            this.props.onQtsDefault()\n            this.props.onCarrinho()\n        })\n    }\n\n    render() {\n        return(\n            <Modal\n                open={this.state.open}\n                trigger={this.props.children}\n                onOpen={this.onOpen}\n                size='small' \n            >\n                <Header icon='shopping cart' content='Observação' />\n                <Modal.Content>\n                    <Form>\n                        <Form.TextArea label=\"Deseja escrever alguma observação ao pedido do seu produto?\" name=\"observacao\" value={this.state.observacao} onChange={this.onChange}/>\n                    </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button onClick={this.close}>\n                        <Icon name='arrow left' /> Voltar\n                    </Button>\n                    <Button primary onClick={this.onCadastrar}>\n                        <Icon name='shopping cart' /> Adicionar\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n        )\n    }\n}\n\nexport default withRouter(ModalConfirmar)","import axios from '../app/api'\n\nexport function addCarrinho(data, distribuidorId, clienteId, observacao) {\n    return axios.put('/carrinho/cadastrar', {\n        distribuidorId: distribuidorId,\n        clienteId: clienteId,\n        produtoId: data._id,\n        nome: data.nome,\n        descricao: data.descricao,\n        valor: data.valor,\n        imagemPath: data.imagemPath,\n        quantidade: data.quantidade,\n        observacao\n    })\n}\n\nexport function getCarrinho(distribuidorId, clienteId) {\n    return axios.get('/carrinho/listar/' + distribuidorId + '/' + clienteId)\n}\n\nexport function delCarrinho(produtoId, distribuidorId, clienteId) {\n    return axios.post('/carrinho/remover', {\n        produtoId, \n        distribuidorId, \n        clienteId\n    })\n}\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Item, Icon, Image, Button, Container, Header, Dropdown } from 'semantic-ui-react';\nimport { getKeep } from '../app/api';\nimport { getDistribuidor } from './api';\nimport { urlStorage } from '../app/api'\nimport ModalConfirmaComponent from './ModalConfirmaComponent'\n\nclass ListarComponent extends React.Component {\n\n    state = {\n        distribuidorId: null,\n        clienteId: null,\n        produtos: [],\n        grupos: [],\n        nome: '',\n        capa: null,\n        online: true,\n    }\n\n    componentDidMount() {\n        const { distribuidorId, clienteId } = this.props.match.params\n\n        getDistribuidor(distribuidorId).then(res => {\n            const distribuidor = res.data.distribuidor\n            console.log('grupos', res.data.grupos)\n            this.setState({\n                produtos: res.data.produtos,\n                grupos: res.data.grupos,\n                nome: distribuidor.nome,\n                capa: distribuidor.imagemPath ? `${urlStorage}/${distribuidor.imagemPath}` : null,\n                distribuidorId,\n                clienteId,\n            })\n            return getKeep(distribuidorId)\n        }).then(pdd => {\n            let pdds = pdd.data\n            let time2 = pdds.time\n            let currentTime = (new Date).getTime();\n            let dif = currentTime - time2\n            let teste = 0\n\n            if (dif<8000){\n                teste = 1\n                //this.state = {teste: true};\n                this.setState({ online: true })\n            } else {\n                teste = 0\n                //this.state = {teste: false};\n                this.setState({ online: true })\n            }\n\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n\n    onGrupoSelected = (e, { value }) => {\n        const { grupos } = this.state\n        \n        grupos.forEach(g => {\n            if (g.categoria === value) {\n                this.setState({ produtos: g.produtos })\n            }\n        })\n    }\n\n    onMais = (id) => {\n        let prd = this.state.produtos\n        let novoPrd = []\n\n        prd.forEach(p => {\n            if (p._id === id) {\n                p.quantidade += 1\n                novoPrd.push(p)\n            } else {\n                novoPrd.push(p)\n            }\n        })\n\n        this.setState({ produtos: novoPrd })\n    }\n\n    onMenos = (id) => {\n        let prd = this.state.produtos\n        let novoPrd = []\n\n        prd.forEach(p => {\n            if (p._id === id && p.quantidade > 1) {\n                p.quantidade -= 1\n                novoPrd.push(p)\n            } else {\n                novoPrd.push(p)\n            }\n        })\n\n        this.setState({ produtos: novoPrd })\n    }\n\n    onKeep = () => {\n        getKeep(this.state.distribuidorId).then((pdd) => {\n            let pdds = pdd.data\n            console.log('time =')\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n\n    onCarrinho = () => {\n        const { distribuidorId, clienteId } = this.state\n        this.props.history.push('/distribuidor/' + distribuidorId + '/cliente/' + clienteId + '/carrinho');\n    }\n\n    onQtsDefault = () => {\n        let prd = this.state.produtos\n        let novoPrd = []\n        prd.forEach(p => {\n            p.quantidade = 1\n            novoPrd.push(p)\n        })\n        this.setState({ produtos: novoPrd })\n    }\n\n    render() {\n        const { online, produtos, capa, nome, distribuidorId, clienteId, grupos } = this.state\n        return (\n            <Container>\n                <Header as='h2' style={{ marginTop: 20 }}>\n                    {nome}\n                    <Button primary floated='right' onClick={() => this.onCarrinho()}>\n                        <Icon name='shopping cart' /> Meu carrinho\n                    </Button>\n                </Header>\n                <Image src={capa} fluid />\n                <div style={{ paddingTop: 20, paddingBottom: 20 }}>\n                    <small style={{ fontSize: 20 }}>Produtos:</small>\n                    <Dropdown\n                        button\n                        style={{ float: 'right' }}\n                        placeholder='Todos'\n                        selection\n                        options={grupos.map((g, i) => {\n                            return { key: g.categoria, text: g.categoria, value: g.categoria }\n                        })}\n                        onChange={this.onGrupoSelected}\n                    />\n                </div>\n                <Item.Group divided unstackable>\n                    {(produtos || []).map(p => (\n                        <Item>\n                            <Item.Content>\n                            <Item.Image size='tiny' src={p.imagemPath ? `${urlStorage}/${p.imagemPath}` : 'https://react.semantic-ui.com/images/wireframe/square-image.png'} />\n                                <Item.Header style={{ padding: 10 }}>\n                                    {p.nome}\n                                    <br />\n                                    <small>R$ {p.valor}</small>\n                                </Item.Header>\n                                <Item.Description>\n                                    <p>{p.descricao}</p>   \n                                </Item.Description>\n                                <Item.Extra>\n                                    <div style={{ marginBottom: 10, float: 'right' }}>\n                                        <ModalConfirmaComponent onQtsDefault={this.onQtsDefault} onCarrinho={this.onCarrinho} produto={p} distribuidorId={distribuidorId} clienteId={clienteId}>\n                                            <Button circular color='blue' icon='shopping cart'> \n                                                <Icon name='shopping cart' /> Add \n                                            </Button>\n                                        </ModalConfirmaComponent>\n                                    </div>\n                                    <Button.Group>\n                                        <Button basic color='blue' icon='minus' onClick={() => this.onMenos(p._id)}/>\n                                        <Button basic color='blue'>{p.quantidade}</Button>\n                                        <Button basic color='blue' icon='plus'onClick={() => this.onMais(p._id)}/>\n                                    </Button.Group>\n                                </Item.Extra>\n                            </Item.Content>\n                        </Item>\n                    ))}\n                </Item.Group>\n            </Container>\n        )\n    }\n}\n\nexport default withRouter(ListarComponent)","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Modal, Header, Button, Icon } from 'semantic-ui-react';\n\nclass ModalConfirmar extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.close = this.close.bind(this)\n        this.onOpen = this.onOpen.bind(this)\n        this.state = {\n            open: false,\n        }\n    }\n\n\n    close() {\n        this.setState({ open: false })\n        this.props.onPedido()\n    }\n\n    onOpen() {\n        this.setState({ open: true })\n    }\n\n    render() {\n        return(\n            <Modal\n                open={this.state.open}\n                trigger={this.props.children}\n                onOpen={this.onOpen}\n                basic\n                size='small' \n            >\n                <Header icon='check' content='Seu pedido foi entregue.' />\n                <Modal.Actions>\n                    <Button basic color='blue' inverted onClick={this.close}>\n                        <Icon name='arrow left' /> Voltar ao menu\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n        )\n    }\n}\n\nexport default withRouter(ModalConfirmar)","import React from 'react';\nimport { Image, Button, Container, Header, List, Message } from 'semantic-ui-react';\nimport { withRouter } from 'react-router-dom';\nimport { getCarrinho, delCarrinho } from './api';\nimport { addPedido } from '../pedido/api'\nimport { urlStorage } from './../app/api'\nimport ModalFinalizarComponent from './ModalFinalizarComponent'\n\nclass CarrinhoComponent extends React.Component {\n\n    state = {\n        carrinho: [],\n        valorTotal: 0,\n        distribuidorId: null,\n        clienteId: null,\n    }\n\n    componentDidMount() {\n        this.get()\n    }\n\n    get = () => {\n        const { distribuidorId, clienteId } = this.props.match.params\n        getCarrinho(distribuidorId, clienteId).then(res => {\n            let pdds = res.data\n            let total = 0\n\n            pdds.forEach(p => {\n                total += p.valorTotal\n            })\n\n            this.setState({ \n                carrinho: res.data, \n                valorTotal: total,\n                distribuidorId,\n                clienteId\n            })\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n\n    onRemover = (produtoId) => {\n        const { distribuidorId, clienteId } = this.state        \n        delCarrinho(produtoId, distribuidorId, clienteId).then(() => {\n            this.get()\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n    \n    onMenu = () => {\n        const { distribuidorId, clienteId } = this.state \n        this.props.history.push('/distribuidor/' + distribuidorId + '/cliente/' + clienteId);\n    }\n\n    onPedido = () => {\n        const { distribuidorId, clienteId } = this.state\n        addPedido(distribuidorId, clienteId).then(() => {\n            this.onMenu()\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n\n    render() {\n        return (\n            <Container>\n                <Header as='h2' style={{ padding: 10 }}>\n                    <Button primary circular size='medium' floated='left' icon='angle left' onClick={this.onMenu} />\n                    Meu carrinho\n                </Header>             \n                {this.state.carrinho.length == 0 ? (\n                    <Message info>\n                        <Message.Header>Sem produtos no carrinho.</Message.Header>\n                    </Message>\n                ) : (\n                    <div>                        \n                        {(this.state.carrinho || []).map(p => (\n                            <List>                               \n                                <List.Item>\n                                    <div>\n                                        <Button circular basic icon='cancel' color='red' floated='right' onClick={() => this.onRemover(p.produtoId)}/>\n                                    </div>\n                                    <Image avatar src={p.imagemPath ? `${urlStorage}/${p.imagemPath}` : 'https://react.semantic-ui.com/images/wireframe/square-image.png'} />\n                                <List.Content>\n                                    <List.Header>\n                                        {p.nome}                               \n                                    </List.Header>\n                                    <List.Description>\n                                        <p>\n                                            Quantidade: {p.quantidade}\n                                            <br />\n                                            Valor: R$ {p.valorTotal}\n                                            <br />\n                                            {p.observacao && (\n                                                <div>\n                                                    OBS: {p.observacao}\n                                                </div>\n                                            )}\n                                        </p>\n                                    </List.Description>                                    \n                                </List.Content>\n                                </List.Item>\n                            </List>\n                        ))}\n                        <Header as='h3' style={{ padding: 10 }}>\n                            Total: R$ {this.state.valorTotal}\n                        </Header>\n                        <ModalFinalizarComponent onPedido={this.onPedido}>\n                            <Button fluid positive floated='right' >Pedir agora</Button>\n                        </ModalFinalizarComponent>\n                    </div>                    \n                )}\n            </Container>\n        )\n    }\n}\n\nexport default withRouter(CarrinhoComponent)","import axios from '../app/api'\n\nexport function addPedido(distribuidorId, clienteId) {\n    return axios.put('/pedido/cadastrar', {\n        distribuidorId, \n        clienteId \n    })\n}\n\n\nexport function getPedido(distribuidorId) {\n    return axios.get('/pedido/listar/' + distribuidorId)\n}\n\nexport function getPedidoDetalhe(id) {\n    return axios.get('/pedido/listar/detalhe/' + id)\n}\n\nexport function delPedido(id) {\n    return axios.delete('/pedido/remover/' + id)\n}","import axios from './../app/api'\n\nexport function getAll() {\n    return axios.get('/distribuidor/listar')\n}\n\nexport function get(id) {\n    return axios.get('/distribuidor/listar/detalhe/' + id)\n}\n\nexport function create(data) {\n    return axios.put('/distribuidor/cadastrar', {\n        nome: data.nome,\n        razaoSocial: data.razaoSocial,\n        cnpj: data.cnpj,\n        telefone: data.telefone,\n        nomeCompleto: data.nomeCompleto,\n        cpf: data.cpf,\n        rg: data.rg,\n        email: data.email,\n        celular: data.celular,\n        nomeEndereco: data.nomeEndereco,\n        numero: data.numero,\n        complemento: data.complemento,\n        cep: data.cep,\n        bairro: data.bairro,\n        cidade: data.cidade,\n        estado: data.estado,\n        pagamentoId: data.pagamentoId,\n        categoriaId: data.categoriaId,\n        pgDados: data.pgDados,\n        valor: data.valor,\n        login: data.login,\n        senha: data.senha,\n    })\n}\n\nexport function update(data) {\n    return axios.post('/distribuidor/editar/' + data.id, {\n        nome: data.nome,\n        razaoSocial: data.razaoSocial,\n        cnpj: data.cnpj,\n        telefone: data.telefone,\n        nomeCompleto: data.nomeCompleto,\n        cpf: data.cpf,\n        rg: data.rg,\n        email: data.email,\n        celular: data.celular,\n        nomeEndereco: data.nomeEndereco,\n        numero: data.numero,\n        complemento: data.complemento,\n        cep: data.cep,\n        bairro: data.bairro,\n        cidade: data.cidade,\n        estado: data.estado,\n        pagamentoId: data.pagamentoId,\n        categoriaId: data.categoriaId,\n        pgDados: data.pgDados,\n        valor: data.valor,\n        login: data.login,\n        senha: data.senha,\n        contaId: data.contaId\n    })\n}\n\nexport function remove(id) {\n    return axios.delete('/distribuidor/remover/' + id)\n}\n\nexport function active(id) {\n    return axios.post('/distribuidor/ativar/' + id)\n}\n\nexport function upload(data, id) {\n    return axios.post('/distribuidor/upload/' + id, data)\n}\n\nexport function createProduto(data) {\n    return axios.post('/distribuidor/cadastrar/produto/' + data.id, {\n        produtoId: data.produtoId\n    })\n}\n\nexport function updateProduto(data) {\n    return axios.post('/distribuidor/editar/produto/' + data.id, {\n        nome: data.nome,\n        descricao: data.descricao,\n        valor: data.valor,\n        categoriaId: data.categoriaId,\n        produtoId: data.produtoId\n    })\n}\n\nexport function selectProduto(data) {\n    return axios.post('/distribuidor/selecionar/produto/' + data.id, {\n        produtoId: data.produtoId,\n        valor: data.valor,\n        descricao: data.descricao,\n    })\n}\n\nexport function removeProduto(data) {\n    return axios.post('/distribuidor/remover/produto/' + data.id, {\n        produtoId: data.produtoId,\n    })\n}\n\nexport function uploadProduto(data, id, produtoId) {\n    return axios.post('/distribuidor/upload/produto/' + id + '/' + produtoId, data)\n}\n\nexport function getPedido(id) {\n    return axios.get('/distribuidor/listar/pedido/' + id)\n}\n\nexport function getCliente(id) {\n    return axios.get('/distribuidor/listar/cliente/' + id)\n}\n\nexport function getConta(id) {\n    return axios.get('/distribuidor/listar/conta/' + id)\n}\n\nexport function getOneCodId(id) {\n    return axios.get('/distribuidor/listar/codId/' + id)\n}","import axios from './../app/api'\n\nexport function getAllProduto() {\n    return axios.get('/categoria-produto/listar')\n}\n\nexport function getProduto(id) {\n    return axios.get('/categoria-produto/listar/detalhes/' + id)\n}\n\nexport function addProduto(data) {\n    return axios.put('/categoria-produto/cadastrar', {\n        nome: data.nome\n    })\n}\n\nexport function editProduto(data) {\n    return axios.post('/categoria-produto/editar/' + data.id, {\n        nome: data.nome\n    })\n}\n\nexport function delProduto(id) {\n    return axios.delete('/categoria-produto/remover/' + id)\n}\n\nexport function getAllDistribuidor() {\n    return axios.get('/categoria-distribuidor/listar')\n}\n\nexport function getDistribuidor(id) {\n    return axios.get('/categoria-distribuidor/listar/detalhes/' + id)\n}\n\nexport function addDistribuidor(data) {\n    return axios.put('/categoria-distribuidor/cadastrar', {\n        nome: data.nome\n    })\n}\n\nexport function editDistribuidor(data) {\n    return axios.post('/categoria-distribuidor/editar/' + data.id, {\n        nome: data.nome\n    })\n}\n\nexport function delDistribuidor(id) {\n    return axios.delete('/categoria-distribuidor/remover/' + id)\n}\n\nexport function getAllPagamento() {\n    return axios.get('/categoria-pagamento/listar')\n}\n\nexport function getPagamento(id) {\n    return axios.get('/categoria-pagamento/listar/detalhes/' + id)\n}\n\nexport function addPagamento(data) {\n    return axios.put('/categoria-pagamento/cadastrar', {\n        nome: data.nome\n    })\n}\n\nexport function editPagamento(data) {\n    return axios.post('/categoria-pagamento/editar/' + data.id, {\n        nome: data.nome\n    })\n}\n\nexport function delPagamento(id) {\n    return axios.delete('/categoria-pagamento/remover/' + id)\n}","import React from 'react'\nimport { Button, Form, Icon, Modal, Select, Image, Grid, Message, Segment, Header, Responsive } from 'semantic-ui-react'\nimport { getAllProduto } from '../categoria/api'\nimport { upload, getAll, create } from './../produto/api'\nimport { urlStorage } from './../app/api'\nimport { createProduto, selectProduto } from './api'\n\nclass CadastroProdutoModalComponent extends React.Component {\n\n    state = {\n        modalOpen: false,\n        distribuidorId: null,\n        tabSelecione: true,\n        tabCadastro: false,\n        msgError: null,\n        produtos: [],\n        id: null,\n        nome: '',\n        descricao: '',\n        valor: null,\n        imagemPath: null,\n        categoria: null,\n        nvNome: '',\n        nvDescricao: '',\n        nvValor: null,\n        nvCategorias: [],\n        nvCategoria: null,\n        nvImagemPath: null,\n        nvImagem: null,\n        nvFile: null,\n    }\n\n    onOpen = () => {\n        getAllProduto().then((res) => {\n            this.setState({ \n                nvCategorias: res.data || [],\n            })\n            return getAll()\n        }).then(res => {\n            this.setState({ \n                produtos: res.data || [],\n                modalOpen: true,\n                distribuidorId: this.props.id,\n                id: null\n            })\n        })\n    }\n\n    onClose = () => {\n        this.setState({ modalOpen: false })\n    }\n\n    onChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    onCategoriaSelected = (e, { value }) => {\n        this.setState({\n            nvCategoria: value\n        })\n    }\n\n    onChangeImagem = (e) => {\n        let file = e.target.files[0]\n        this.setState({\n            nvImagem: URL.createObjectURL(file),\n            nvFile: file\n        })\n    }\n\n    onTab = () => {\n        this.setState({\n            tabSelecione: !this.state.tabSelecione,\n            tabCadastro: !this.state.tabCadastro \n        })\n    }\n    \n    onSelect = (produto) => {\n        this.setState({ \n            id: produto._id,\n            nome: produto.nome,\n            categoria: produto.categoria.nome,\n            imagemPath: produto.imagemPath\n        })\n    }\n    \n    onSalvar = () => {\n        const { \n            distribuidorId, tabCadastro, tabSelecione, id,\n            nvNome, nvValor, nvDescricao, nvCategoria, nvFile, nvImagem,\n            nome, valor, descricao, imagemPath,\n        } = this.state\n        let novaImagemPath = null\n        let novoProdutoId = null\n        if (tabCadastro) {\n            create({\n                nome: nvNome,\n                valor: nvValor,\n                descricao: nvDescricao,\n                categoriaId: nvCategoria\n            }).then(res => {\n                novoProdutoId = res.data\n                if (nvFile) {\n                    const data = new FormData() \n                    data.append('file', nvFile)                    \n                    return upload(data, res.data)\n                } else {\n                    return null\n                }\n            }).then(res => {\n                novaImagemPath = res.data\n                return createProduto({\n                    id: distribuidorId,\n                    produtoId: novoProdutoId,\n                })\n            }).then(res => {\n                this.onClose()\n                this.setState({ msgError: null })\n                this.props.getProdutos({\n                    nome: nvNome,\n                    valor: nvValor,\n                    descricao: nvDescricao,\n                    imagemPath: novaImagemPath || null,\n                })\n            })\n        }\n        if (tabSelecione) {\n            console.log(distribuidorId)\n            console.log(id)\n            console.log(valor)\n            console.log(descricao)\n            selectProduto({\n                id: distribuidorId,\n                produtoId: id,\n                valor,\n                descricao\n            }).then(res => {\n                this.onClose()\n                this.setState({ msgError: null })\n                this.props.getProdutos({\n                    nome,\n                    valor,\n                    descricao,\n                    imagemPath\n                })\n            })\n        }\n    }\n\n    render() {\n        const { \n            tabSelecione, tabCadastro, msgError, produtos,\n            id, nome, descricao, valor, imagemPath, categoria,\n            nvNome, nvDescricao, nvValor, nvCategorias, nvImagem\n        } = this.state\n        return (\n            <Modal\n                trigger={this.props.children}\n                open={this.state.modalOpen}\n                onClose={this.onClose}\n                onOpen={this.onOpen}\n            >\n                <Icon link size='large' name='cancel' style={{ float: 'right', margin: '10px' }} onClick={this.onClose}/>\n                <Modal.Header>Produto</Modal.Header>\n                <Modal.Content>\n                    <Responsive {...Responsive.onlyMobile}>\n                        <Button.Group floated='left'>\n                            { tabSelecione ? (\n                                <Button onClick={this.onTab} positive>Selecione produto</Button>\n                            ) : (\n                                <Button onClick={this.onTab}>Selecione produto</Button>\n                            )}\n                            { tabCadastro ? (\n                                <Button onClick={this.onTab} positive>Cadastre produto</Button>\n                            ) : (\n                                <Button onClick={this.onTab}>Cadastre produto</Button>\n                            )}\n                        </Button.Group>\n                        { tabSelecione && (\n                            <Modal.Description style={{ paddingTop: 50 }}>\n                                {id ? (\n                                    <Segment>\n                                        <Form onSubmit={this.onSalvar}>\n                                            <Header as='h3'>\n                                                Detalhes do produto\n                                            </Header>\n                                            <Image src={imagemPath ? `${urlStorage}/${imagemPath}` : 'https://react.semantic-ui.com/images/wireframe/square-image.png'} size='small' floated='right' rounded />                                   \n                                            <p>Nome: {nome}</p>\n                                            <p>Categoria: {categoria}</p>\n                                            <Form.Input width={6} floated=\"left\" type=\"number\" label=\"Valor\" name=\"valor\" value={valor} onChange={this.onChange}/>\n                                            <Form.TextArea label=\"Descrição\" name=\"descricao\" value={descricao} onChange={this.onChange}/>\n                                            <br />\n                                        </Form>\n                                    </Segment>\n                                ) : (\n                                    <div>\n                                        {produtos.length !== 0 ? (\n                                            <Segment.Group>\n                                                {(produtos || []).map((p, i) => (\n                                                    <Segment key={i} style={{ cursor: 'pointer' }} onClick={() => this.onSelect(p)}>{p.nome}</Segment>\n                                                ))}\n                                            </Segment.Group>\n                                        ) : (\n                                            <Header h=\"5\">Nenhum produto cadastrado</Header>\n                                        )}\n                                    </div>\n                                )}\n                            </Modal.Description>\n                        )}\n                        { tabCadastro && (\n                            <Modal.Description style={{ paddingTop: 50 }}>\n                                <Form>\n                                    <Grid>\n                                        <Grid.Column>\n                                            <Image wrapped size='small' src={ nvImagem ? nvImagem : 'https://react.semantic-ui.com/images/wireframe/square-image.png'} />\n                                            <br />\n                                            <Button onClick={() => this.fileInput.click()}>Adicionar imagem</Button>\n                                            <input\n                                                type=\"file\"\n                                                style={{ display: 'none' }}\n                                                onChange={this.onChangeImagem}\n                                                ref={e => { this.fileInput = e }}/>\n                                            <br />\n                                            <br />\n                                            <Form.Field\n                                                control={Select}\n                                                label='Categoria'\n                                                name='nvCategoria'\n                                                options={nvCategorias.map(nvCategoria => {\n                                                    return { key: nvCategoria._id, text: nvCategoria.nome, value: nvCategoria._id }\n                                                })}\n                                                onChange={this.onCategoriaSelected}\n                                            />\n                                            <Form.Input label=\"Nome\" name=\"nvNome\" value={nvNome} onChange={this.onChange}/>\n                                            <Form.Input type=\"number\" label=\"Valor\" name=\"nvValor\" value={nvValor} onChange={this.onChange}/>\n                                            <Form.TextArea label=\"Descrição\" name=\"nvDescricao\" value={nvDescricao} onChange={this.onChange}/>\n                                        </Grid.Column>\n                                    </Grid>\n                                </Form>\n                            </Modal.Description>\n                        )}\n                    </Responsive>\n                    <Responsive minWidth={Responsive.onlyTablet.minWidth}>\n                        <Button.Group floated='left'>\n                            { tabSelecione ? (\n                                <Button onClick={this.onTab} positive>Selecione produto já cadastrado</Button>\n                            ) : (\n                                <Button onClick={this.onTab}>Selecione produto já cadastrado</Button>\n                            )}\n                            { tabCadastro ? (\n                                <Button onClick={this.onTab} positive>Cadastre um novo produto</Button>\n                            ) : (\n                                <Button onClick={this.onTab}>Cadastre um novo produto</Button>\n                            )}\n                        </Button.Group>\n                        { tabSelecione && (\n                            <Modal.Description style={{ paddingTop: 50 }}>\n                                <Grid>\n                                    <Grid.Column width={5}>\n                                        {produtos.length !== 0 ? (\n                                            <Segment.Group>\n                                                {(produtos || []).map((p, i) => (\n                                                    <div>\n                                                        { id === p._id ? (\n                                                            <Segment tertiary key={i} style={{ cursor: 'pointer' }} onClick={() => this.onSelect(p)}>{p.nome}</Segment>\n                                                        ) : (\n                                                            <Segment key={i} style={{ cursor: 'pointer' }} onClick={() => this.onSelect(p)}>{p.nome}</Segment>\n                                                        )}\n                                                    </div>\n                                                ))}\n                                            </Segment.Group>\n                                        ) : (\n                                            <Header h=\"5\">Nenhum produto cadastrado</Header>\n                                        )}\n                                    </Grid.Column>\n                                    <Grid.Column width={11}>\n                                            {id && (\n                                                <Segment>\n                                                    <Form onSubmit={this.onSalvar}>\n                                                        <Header as='h3'>\n                                                            Detalhes do produto\n                                                        </Header>\n                                                        <Image src={imagemPath ? `${urlStorage}/${imagemPath}` : 'https://react.semantic-ui.com/images/wireframe/square-image.png'} size='small' floated='right' rounded />                                   \n                                                        <p>Nome: {nome}</p>\n                                                        <p>Categoria: {categoria}</p>\n                                                        <Form.Input width={6} floated=\"left\" type=\"number\" label=\"Valor\" name=\"valor\" value={valor} onChange={this.onChange}/>\n                                                        <Form.TextArea label=\"Descrição\" name=\"descricao\" value={descricao} onChange={this.onChange}/>\n                                                        <br />\n                                                    </Form>\n                                                </Segment>\n                                            )}\n                                    </Grid.Column>\n                                </Grid>\n                            </Modal.Description>\n                        )}\n                        { tabCadastro && (\n                            <Modal.Description style={{ paddingTop: 50 }}>\n                                <Form onSubmit={this.onSalvar}>\n                                    <Grid>\n                                        <Grid.Column width={4}>\n                                            <Image wrapped size='medium' src={ nvImagem ? nvImagem : 'https://react.semantic-ui.com/images/wireframe/square-image.png'} />\n                                            <input\n                                                type=\"file\"\n                                                style={{ display: 'none' }}\n                                                onChange={this.onChangeImagem}\n                                                ref={e => { this.fileInput = e }}/>\n                                            <Button attached='bottom' onClick={() => this.fileInput.click()}>Adicionar foto</Button>\n                                        </Grid.Column>\n                                        <Grid.Column width={12}>\n                                            <Form.Group>\n                                                <Form.Field\n                                                    width={8}\n                                                    control={Select}\n                                                    label='Categoria'\n                                                    name='nvCategoria'\n                                                    options={nvCategorias.map(nvCategoria => {\n                                                        return { key: nvCategoria._id, text: nvCategoria.nome, value: nvCategoria._id }\n                                                    })}\n                                                    onChange={this.onCategoriaSelected}\n                                                />\n                                                <Form.Input width={8} type=\"number\" label=\"Valor\" name=\"nvValor\" value={nvValor} onChange={this.onChange}/>\n                                            </Form.Group>\n                                            <Form.Input label=\"Nome\" name=\"nvNome\" value={nvNome} onChange={this.onChange}/>\n                                            <Form.TextArea label=\"Descrição\" name=\"nvDescricao\" value={nvDescricao} onChange={this.onChange}/>\n                                        </Grid.Column>\n                                    </Grid>\n                                </Form>\n                            </Modal.Description>\n                        )}\n                    </Responsive>\n                </Modal.Content>\n                <Modal.Actions>\n                    { msgError && (\n                        <Message floated='left' compact warning>\n                            {msgError}\n                        </Message>\n                    )}\n                    <Button primary type='submit' onClick={this.onSalvar}>\n                        <Icon name=\"plus\" />\n                        Salvar\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n        )\n    }\n}\n\nexport default CadastroProdutoModalComponent","import React from 'react'\nimport { Button, Form, Icon, Modal, Select, Grid, Message } from 'semantic-ui-react'\nimport { getAllProduto } from '../categoria/api'\nimport { updateProduto } from './api'\n\nclass CadastroProdutoModalComponent extends React.Component {\n\n    state = {\n        modalOpen: false,\n        id: null,\n        distribuidorId: null,\n        nome: '',\n        descricao: '',\n        valor: null,\n        imagemPath: null,\n        categoria: null,\n        categorias: [],\n        categoriaId: null,\n    }\n\n    onOpen = () => {\n        this.setState({\n            modalOpen: true,\n            ...this.props.produto,\n            id: this.props.produto._id,\n            distribuidorId: this.props.distribuidorId,\n            categoriaId: this.props.produto.categoria._id\n        })\n        getAllProduto().then((res) => {\n            this.setState({ \n                categorias: res.data || [],\n            })\n        })\n    }\n\n    onClose = () => {\n        this.setState({ modalOpen: false })\n    }\n\n    onChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    onCategoriaSelected = (e, { value }) => {\n        this.setState({\n            categoria: value\n        })\n    }\n    \n    onSalvar = () => {\n        const { \n            id, nome, valor, descricao, categoria, categoriaId, distribuidorId\n        } = this.state\n        updateProduto({\n            id: distribuidorId,\n            produtoId: id,\n            nome,\n            descricao,\n            valor,\n            categoriaId: categoria ? categoria : categoriaId\n        }).then(() => {\n            this.onClose()\n            this.props.get()\n        })\n    }\n\n    render() {\n        const { \n            id, nome, valor, descricao, categorias\n        } = this.state\n        return (\n            <Modal\n                trigger={this.props.children}\n                open={this.state.modalOpen}\n                onClose={this.onClose}\n                onOpen={this.onOpen}\n            >\n                <Icon link size='large' name='cancel' style={{ float: 'right', margin: '10px' }} onClick={this.onClose}/>\n                <Modal.Header>Produto</Modal.Header>\n                <Modal.Content>\n                    <Modal.Description>\n                        <Form>\n                            <Grid>\n                                <Grid.Column>\n                                    <Form.Group>\n                                        <Form.Field\n                                            width={8}\n                                            control={Select}\n                                            label='Categoria'\n                                            name='nvCategoria'\n                                            options={categorias.map(c => {\n                                                return { key: c._id, text: c.nome, value: c._id }\n                                            })}\n                                            onChange={this.onCategoriaSelected}\n                                        />\n                                        <Form.Input width={8} type=\"number\" label=\"Valor\" name=\"valor\" value={valor} onChange={this.onChange}/>\n                                    </Form.Group>\n                                    <Form.Input label=\"Nome\" name=\"nome\" value={nome} onChange={this.onChange}/>\n                                    <Form.TextArea label=\"Descrição\" name=\"descricao\" value={descricao} onChange={this.onChange}/>\n                                </Grid.Column>\n                            </Grid>\n                        </Form>\n                    </Modal.Description>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button primary type='submit' onClick={this.onSalvar}>\n                        <Icon name=\"plus\" />\n                        Salvar\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n        )\n    }\n}\n\nexport default CadastroProdutoModalComponent","import React from 'react';\nimport { Image, Button, Container, Header, Item, Message, Icon } from 'semantic-ui-react';\nimport { withRouter } from 'react-router-dom';\nimport { getPedido } from './api';\nimport { removeProduto, uploadProduto, get, getCliente } from './../distribuidor/api'\nimport ModalProdutoComponent from './../distribuidor/ModalProdutoComponent'\nimport ModalProdutoEditarComponent from './../distribuidor/ModalProdutoEditarComponent'\nimport { urlStorage } from './../app/api'\n\nclass PedidoComponent extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            pedidos: [],\n            produtos: [],\n            clientes: [],\n            id: null,\n            distribuidorId: null,\n            produtoId: null,\n            nome: '',\n            imagemPath: '',\n            tabPedido: true,\n            tabProduto: false,\n            tabCliente: false,\n            clientes: false,\n        }\n    }\n    \n    componentDidMount() {\n        const { distribuidorId } = this.props.match.params\n\n        this.setState({ distribuidorId })\n\n        getPedido(distribuidorId).then((res) => {\n            this.setState({ \n                pedidos: res.data.pedidos || [],\n                ...res.data.distribuidor,\n                id: res.data.distribuidor._id\n            })\n            return getCliente(res.data.distribuidor._id)\n        }).then(res => {\n            this.setState({ \n                clientes: res.data || [],\n            })\n        })\n        \n    }\n\n    onGet = () => {\n        get(this.state.id).then(res => {\n            this.setState({\n                ...res.data,\n                id: res.data._id\n            })\n        })\n    }\n\n    onPedidoDetalhe(id) {\n        this.props.history.push('/distribuidor/' + this.state.distribuidorId + '/pedido/' + id + '/detalhe');\n    }\n\n    onClienteDetalhe(id) {\n        this.props.history.push('/distribuidor/' + this.state.distribuidorId + '/detalhe/cliente/' + id);\n    }\n\n    onTab = (tab) => {\n        if (tab === 'detalhe') this.setState({ tabPedido: true, tabProduto: false, tabCliente: false })\n        if (tab === 'produto') this.setState({ tabPedido: false, tabProduto: true, tabCliente: false })\n        if (tab === 'cliente') this.setState({ tabPedido: false, tabProduto: false, tabCliente: true })\n    }\n\n    getProdutos = (produto) => {\n        this.setState({                \n            produtos: [...this.state.produtos, produto]\n        })\n    }\n\n    onRemoverProduto = (produtoId) => {\n        const { produtos, id } = this.state\n        removeProduto({ id, produtoId }).then(res => {\n            let prds = []\n            produtos.forEach(p => {\n                if (p._id !== produtoId) prds.push(p)\n            })\n            this.setState({ produtos: prds })\n        })\n    }\n\n    onUploadProduto = (e) => {\n        const { produtoId } = this.state\n        let file = e.target.files[0]\n        const data = new FormData() \n        data.append('file', file)\n        uploadProduto(data, this.state.id, produtoId).then(res => {\n            this.onGet()\n        })\n    }\n\n    onUploadProdutoSelect = (produtoId) => {\n        this.setState({ produtoId })\n    }\n\n    onCadastrarCliente = () => {\n        const { distribuidorId } = this.state\n        this.props.history.push(`/distribuidor/${distribuidorId}/cadastrar/cliente`);\n    }\n\n    render() {\n        const { pedidos, imagemPath, nome, tabPedido, tabProduto, produtos, id, tabCliente, clientes } = this.state\n        return (\n            <div>\n                <Header as='h2' style={{ marginTop: 20, marginLeft: 20 }}>\n                    {nome}\n                </Header>\n                <Image src={imagemPath ? `${urlStorage}/${imagemPath}` : 'https://react.semantic-ui.com/images/wireframe/square-image.png'} fluid />\n                <Container>\n                    <br />\n                    <Button.Group floated='left'>\n                        { tabPedido ? (\n                            <Button onClick={() => this.onTab('detalhe')} positive>Pedidos</Button>\n                        ) : (\n                            <Button onClick={() => this.onTab('detalhe')}>Pedidos</Button>\n                        )}\n                        { tabProduto ? (\n                            <Button onClick={() => this.onTab('produto')} positive>Produtos</Button>\n                        ) : (\n                            <Button onClick={() => this.onTab('produto')}>Produtos</Button>\n                        )}\n                        { tabCliente ? (\n                            <Button onClick={() => this.onTab('cliente')} positive>Clientes</Button>\n                        ) : (\n                            <Button onClick={() => this.onTab('cliente')}>Clientes</Button>\n                        )}\n                    </Button.Group>\n                    <br />\n                    { tabPedido && (\n                        <div style={{ paddingTop: 30 }}>\n                            <Header as='h3'>\n                                Pedidos\n                            </Header>\n                            {pedidos.length == 0 ? (\n                                <Message info>\n                                    <Message.Header>Sem pedidos solicitados.</Message.Header>\n                                </Message>\n                            ) : (\n                                <Item.Group divided unstackable>\n                                {(pedidos || []).map(p => (\n                                    <Item>\n                                        <Item.Content>\n                                            { p.cliente ? (\n                                                <Item.Header as='a'>Cliente: {p.cliente.nome}</Item.Header>\n                                            ) : (\n                                                <Item.Header as='a'>Cliente ID: {p.clienteId}</Item.Header>\n                                            )}\n                                            <Item.Meta>Data da solicitação: {new Date(p.createdAt).toLocaleDateString('en-GB')}</Item.Meta>\n                                            <Item.Description>\n                                                Quantidade de produtos: {p.quantidade}\n                                                <br />\n                                                Valor total: R$ {p.valorTotal}\n                                                { p.cliente && (\n                                                    <div>\n                                                        <br />\n                                                        Telefone: {p.cliente.celular}\n                                                        <br />\n                                                        Endereço: {p.cliente.endereco.nomeEndereco}, {p.cliente.endereco.numero} - {p.cliente.endereco.complemento} \n                                                        <br />\n                                                        {p.cliente.endereco.bairro} - {p.cliente.endereco.cep}\n                                                        <br />\n                                                        {p.cliente.endereco.cidade} - {p.cliente.endereco.estado}\n                                                    </div>\n                                                )}\n                                            </Item.Description>\n                                            <Item.Extra>\n                                                <Button primary floated='left' onClick={() => this.onPedidoDetalhe(p._id)}>\n                                                    <Icon name='list layout' /> Detalhes dos produtos\n                                                </Button>\n                                            </Item.Extra>\n                                        </Item.Content>\n                                    </Item>\n                                ))}\n                                </Item.Group>\n                            )}\n                        </div>\n                    )}\n                    { tabProduto && (\n                        <div style={{ paddingTop: 30 }}>\n                            <ModalProdutoComponent getProdutos={this.getProdutos} id={id}>\n                                <Button floated='left' primary icon>\n                                    <Icon name='plus' /> Adicionar produto\n                                </Button>\n                            </ModalProdutoComponent>\n                            {produtos.length == 0 ? (\n                                <Message info style={{ marginTop: 50 }}>\n                                    <Message.Header>Nenhum produto adicionado.</Message.Header>\n                                </Message>\n                            ) : (\n                                <Item.Group divided unstackable>\n                                    {(produtos || []).map(p => (\n                                        <Item>\n                                            <Item.Content>\n                                            <Item.Image size='tiny' src={p.imagemPath ? `${urlStorage}/${p.imagemPath}` : 'https://react.semantic-ui.com/images/wireframe/square-image.png'} />\n                                                <Item.Header style={{ padding: 10 }}>\n                                                    <br />\n                                                    {p.nome}<small> - {p.categoria.nome}</small>\n                                                    <br />                                                    \n                                                    <small>R$ {p.valor}</small>\n                                                </Item.Header>\n                                                <Button.Group floated='right' vertical>\n                                                    <ModalProdutoEditarComponent get={this.onGet} produto={p} distribuidorId={id}>\n                                                        <Button floated='right' primary icon>\n                                                            <Icon name='edit' />\n                                                        </Button>\n                                                    </ModalProdutoEditarComponent>\n                                                    <Button floated='right' icon onClick={() => {\n                                                        this.onUploadProdutoSelect(p._id)\n                                                        return this.fileInput.click()\n                                                    }}>\n                                                        <Icon name='camera' />\n                                                    </Button>\n                                                    <input\n                                                        type=\"file\"\n                                                        style={{ display: 'none' }}\n                                                        onChange={this.onUploadProduto}\n                                                        ref={e => { this.fileInput = e }}\n                                                    /> \n                                                    <Button floated='right' color='red' icon onClick={() => this.onRemoverProduto(p._id)}>\n                                                        <Icon name='cancel' />\n                                                    </Button>\n                                                </Button.Group>\n                                                <Item.Description>\n                                                    <p>{p.descricao}</p>   \n                                                </Item.Description>\n                                            </Item.Content>\n                                        </Item>\n                                    ))}\n                                </Item.Group>\n                            )}\n                        </div>\n                    )}\n                    { tabCliente && (\n                        <div style={{ paddingTop: 30 }}>\n                            <Button floated='left' primary icon onClick={this.onCadastrarCliente}>\n                                <Icon name='plus' /> Cadastrar cliente\n                            </Button>\n                            {clientes.length == 0 ? (\n                                <Message info style={{ marginTop: 50 }}>\n                                    <Message.Header>Nenhum cliente cadastrado.</Message.Header>\n                                </Message>\n                            ) : (\n                                <Item.Group divided unstackable style={{ marginTop: 50 }}>\n                                    {(clientes || []).map(c => (\n                                        <Item>\n                                            <Item.Image size='tiny' src={c.imagemPath ? `${urlStorage}/${c.imagemPath}` : 'https://react.semantic-ui.com/images/wireframe/square-image.png'} />\n                                            <Item.Content>\n                                                <Item.Header>{c.nome}</Item.Header>\n                                                <Item.Description>\n                                                    <p>E-mail: {c.email}</p>\n                                                    <p>Telefone: {c.telefone}</p>\n                                                </Item.Description>\n                                                <Item.Extra>\n                                                    <Button primary floated='left' onClick={() => this.onClienteDetalhe(c._id)}>\n                                                        <Icon name='list layout' /> Detalhes do cliente\n                                                    </Button>\n                                                </Item.Extra>\n                                            </Item.Content>\n                                        </Item>\n                                    ))}\n                                </Item.Group>\n                            )}\n                        </div>\n                    )}\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(PedidoComponent)","import React from 'react';\nimport { Image, Button, Container, Header, List } from 'semantic-ui-react';\nimport { withRouter } from 'react-router-dom';\nimport { getPedidoDetalhe, delPedido } from './api';\nimport { urlStorage } from './../app/api'\n\nclass CarrinhoComponent extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.onPedido = this.onPedido.bind(this)\n        this.onFinalizar = this.onFinalizar.bind(this)\n        this.state = {\n            produtos: [],\n            valorTotal: null,\n            id: null,\n            distribuidorId: null,\n        }\n    }\n    \n    componentDidMount() {\n        const { distribuidorId, id } = this.props.match.params\n\n        this.setState({ distribuidorId, id })\n\n        getPedidoDetalhe(id).then((res) => {\n            this.setState({ produtos: res.data.produtos })\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n\n    onPedido() {\n        this.props.history.push('/distribuidor/' + this.state.distribuidorId + '/pedido');\n    }\n\n    onFinalizar() {\n        delPedido(this.state.id).then(() => {\n            this.onPedido()\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n\n    render() {\n        const { produtos } = this.state\n        return (\n            <Container>\n                <Header as='h2' style={{ padding: 10 }}>\n                    <Button circular primary size='medium' floated='left' icon='angle left' onClick={this.onPedido} />\n                    Produtos\n                </Header>\n                {(produtos || []).map(p => (\n                    <List>\n                        <List.Item>\n                        <Image avatar src={p.imagemPath ? `${urlStorage}/${p.imagemPath}` : 'https://react.semantic-ui.com/images/wireframe/square-image.png'} />\n                        <List.Content>\n                            <List.Header>\n                            {p.nome}\n                            </List.Header>\n                            <List.Description>\n                                <p>\n                                    Quantidade: {p.quantidade}\n                                    <br />\n                                    Valor: R$ {p.valorTotal}\n                                    <br />\n                                    {p.observacao && (\n                                        <div>\n                                            OBS: {p.observacao}\n                                        </div>\n                                    )}\n                                </p>\n                            </List.Description>\n                        </List.Content>\n                        </List.Item>\n                    </List>\n                ))}\n                <Button fluid positive floated='right' onClick={() => this.onFinalizar()}>Entrega efetuada</Button>\n            </Container>\n        )\n    }\n}\n\nexport default withRouter(CarrinhoComponent)","import React from 'react';\n\nimport { NavLink } from 'react-router-dom'\n\nimport { Container, Menu } from 'semantic-ui-react';\n\nclass Header extends React.Component {\n\n    render() {\n        return (\n            <Menu pointing secondary >\n                <Container>\n                    <Menu.Item as={NavLink} to=\"/admin\" content='Cliente' />\n                    <Menu.Item as={NavLink} to=\"/admin/distribuidor\" content='Distribuidor' />\n                    <Menu.Item as={NavLink} to=\"/admin/produto\" content='Produto' />\n                    <Menu.Item as={NavLink} to=\"/admin/categoria\" content='Categoria' />\n                </Container>\n            </Menu>\n        )\n    }\n}\n\nexport default Header;","import axios from './../app/api'\n\nexport function getAll() {\n    return axios.get('/cliente/listar')\n}\n\nexport function get(id) {\n    return axios.get('/cliente/listar/detalhes/' + id)\n}\n\nexport function getPedido(id) {\n    return axios.get('/cliente/listar/pedidos/' + id)\n}\n\nexport function create(data) {\n    return axios.put('/cliente/cadastrar', {\n        distribuidorId: data.distribuidorId,\n        nome: data.nome,\n        cpf: data.cpf,\n        rg: data.rg,\n        email: data.email,\n        telefone: data.telefone,\n        celular: data.celular,\n        nomeEndereco: data.endereco.nomeEndereco,\n        numero: data.endereco.numero,\n        complemento: data.endereco.complemento,\n        bairro: data.endereco.bairro,\n        cep: data.endereco.cep,\n        cidade: data.endereco.cidade,\n        estado: data.endereco.estado,\n    })\n}\n\nexport function update(data) {\n    return axios.post('/cliente/editar/' + data.id, {\n        distribuidorId: data.distribuidorId,\n        nome: data.nome,\n        cpf: data.cpf,\n        rg: data.rg,\n        email: data.email,\n        telefone: data.telefone,\n        celular: data.celular,\n        nomeEndereco: data.endereco.nomeEndereco,\n        numero: data.endereco.numero,\n        complemento: data.endereco.complemento,\n        bairro: data.endereco.bairro,\n        cep: data.endereco.cep,\n        cidade: data.endereco.cidade,\n        estado: data.endereco.estado,\n    })\n}\n\nexport function remove(id) {\n    return axios.delete('/cliente/remover/' + id)\n}\n\nexport function upload(data, id) {\n    return axios.post('/cliente/upload/' + id, data)\n}","import React from 'react'\nimport { Button, Header, Icon, Modal } from 'semantic-ui-react'\nimport { remove } from './api'\n\nclass ClienteModalRemoveComponent extends React.Component {\n    \n    state = {\n        modalOpen: false,\n        id: null,\n        nome: ''\n    }\n\n    onOpen = () => {\n        this.setState({ \n            modalOpen: true,\n            ...this.props.cliente\n        })\n    }\n    \n    onClose = () => {\n        this.setState({ modalOpen: false })\n    }\n\n    onRemove = () => {\n        remove(this.state.id).then(() => {\n            this.onClose()\n            this.props.getCliente()\n        })\n    }\n\n    render() {\n        return (\n            <Modal\n                trigger={this.props.children}\n                open={this.state.modalOpen}\n                onClose={this.onClose}\n                onOpen={this.onOpen}\n                basic \n                size='small'\n            >\n                <Header icon='archive' content='Desativar cliente' />\n                <Modal.Content>\n                <p>\n                    Tem certeza que deseja desativar o cliente {this.state.nome}?\n                </p>\n                </Modal.Content>\n                <Modal.Actions>\n                <Button basic color='green' inverted onClick={this.onClose}>\n                    <Icon name='remove' /> Não\n                </Button>\n                <Button color='red' inverted onClick={this.onRemove}>\n                    <Icon name='checkmark' /> Sim\n                </Button>\n                </Modal.Actions>\n            </Modal>\n        )\n    }\n}\n\nexport default ClienteModalRemoveComponent","import React from 'react';\nimport { Container, Grid, Header, Segment, Button, Icon, Image } from 'semantic-ui-react'\nimport { getAll, getPedido, upload } from './api'\nimport { urlStorage } from './../app/api'\nimport ModalRemoveComponent from './ModalRemoveComponent'\n\nclass ClienteComponent extends React.Component {\n\n    state = {\n        clientes: [],\n        distribuidor: null,\n        id: null,\n        tabDetalhe: true,\n        tabPedido: false,\n        imagemPath: null,\n    }\n\n    componentDidMount() {\n        this.get()\n    }\n\n    get = () => {\n        getAll().then(res => {\n            this.setState({ \n                clientes: res.data || [], \n                id: null \n            })\n        })\n    }\n    \n    getUpdate = (cliente) => {\n        this.get()\n        this.setState({ ...cliente })\n    }\n\n    onCadastrar = () => {\n        this.props.history.push('/admin/cliente/cadastrar');\n    }\n\n    onEditar = () => {\n        this.props.history.push('/admin/cliente/' + this.state.id + '/editar');\n    }\n\n    onSelect = (cliente) => {\n        this.setState({\n            id: cliente._id,\n            distribuidor: cliente.distribuidor || null,\n            ...cliente\n        })\n        getPedido(cliente._id).then(res => {\n            this.setState({                \n                pedidos: res.data || [],                \n            })\n        })\n    }\n\n    onTab = () => {\n        this.setState({\n            tabDetalhe: !this.state.tabDetalhe,\n            tabPedido: !this.state.tabPedido \n        })\n    }\n\n    onUpload = (e) => {\n        let file = e.target.files[0]\n        const data = new FormData() \n        data.append('file', file)\n        upload(data, this.state.id).then(res => {\n            this.get()\n        })\n    }\n\n    render() {\n        const { clientes, id, tabDetalhe, tabPedido,\n            nome, cpf, rg, email, telefone, celular, endereco, pedidos, imagemPath, codId, distribuidor\n        } = this.state\n        return(\n            <Container>\n                <Grid>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Header as='h1'>\n                                Clientes\n                                <Button primary floated='right' onClick={this.onCadastrar}> \n                                    <Icon name='plus' /> Cadastrar \n                                </Button>\n                            </Header> \n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column width={5}>\n                            {clientes.length !== 0 ? (\n                                <Segment.Group>\n                                    {(clientes || []).map((c, i) => (\n                                        <div>\n                                            { id === c._id ? (\n                                                <Segment tertiary key={i} style={{ cursor: 'pointer' }} onClick={() => this.onSelect(c)}>{c.codId} - {c.nome}</Segment>\n                                            ) : (\n                                                <Segment key={i} style={{ cursor: 'pointer' }} onClick={() => this.onSelect(c)}>{c.codId} - {c.nome}</Segment>\n                                            )}\n                                        </div>\n                                    ))}\n                                </Segment.Group>\n                            ) : (\n                                <Header h=\"5\">Nenhum cliente cadastrado</Header>\n                            )}\n                        </Grid.Column>\n                        <Grid.Column width={11}>\n                            { id && (\n                                <Segment>\n                                    <Header as='h3'>\n                                        Dados Pessoais\n                                        <ModalRemoveComponent getCliente={this.get} cliente={{ id, nome }}>\n                                            <Button color='red' floated='right'> \n                                                <Icon name='archive' /> Desativar \n                                            </Button>\n                                        </ModalRemoveComponent>\n                                        <Button primary floated='right' onClick={this.onEditar}> \n                                            <Icon name='edit' /> Editar \n                                        </Button>\n                                        <Button secundary floated='right' onClick={() => this.fileInput.click()}> \n                                            <Icon name='camera' /> Alterar Foto Perfil\n                                        </Button>\n                                        <input\n                                            type=\"file\"\n                                            style={{ display: 'none' }}\n                                            onChange={this.onUpload}\n                                            ref={e => { this.fileInput = e }}\n                                        />    \n                                    </Header>\n                                    <br />\n                                    <Image src={imagemPath ? `${urlStorage}/${imagemPath}` : 'https://react.semantic-ui.com/images/wireframe/square-image.png'} size='medium' floated='right' rounded />\n                                    <p>Distribuidor: {distribuidor.razaoSocial}</p>\n                                    <p>Nome: {nome}</p>\n                                    <p>Código: {codId}</p>\n                                    <p>CPF: {cpf}</p>\n                                    <p>RG: {rg}</p>\n                                    <p>E-mail: {email}</p>\n                                    <p>Telefone: {telefone}</p>\n                                    <p>Celular: {celular}</p>\n                                    <Header as='h3'>Endereço</Header>\n                                    <p>Endereço: {endereco.nomeEndereco}</p>\n                                    <p>Número: {endereco.numero}</p>\n                                    <p>Complemento: {endereco.complemento}</p>\n                                    <p>Bairro: {endereco.bairro}</p>\n                                    <p>CEP: {endereco.cep}</p>\n                                    <p>Cidade: {endereco.cidade}</p>\n                                    <p>Estado: {endereco.estado}</p>\n                                </Segment>\n                            )}\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Container>\n        )\n    }\n}\n\nexport default ClienteComponent","import React from 'react'\nimport { Button, Header, Icon, Modal } from 'semantic-ui-react'\nimport { remove } from './api'\n\nclass ClienteModalRemoveComponent extends React.Component {\n    \n    state = {\n        modalOpen: false,\n        id: null,\n        razaoSocial: ''\n    }\n\n    onOpen = () => {\n        this.setState({ \n            modalOpen: true,\n            ...this.props.distribuidor\n        })\n    }\n    \n    onClose = () => {\n        this.setState({ modalOpen: false })\n    }\n\n    onRemove = () => {\n        remove(this.state.id).then(() => {\n            this.onClose()\n            this.props.getDistribuidor()\n        })\n    }\n\n    render() {\n        return (\n            <Modal\n                trigger={this.props.children}\n                open={this.state.modalOpen}\n                onClose={this.onClose}\n                onOpen={this.onOpen}\n                basic \n                size='small'\n            >\n                <Header icon='archive' content='Desativar cliente' />\n                <Modal.Content>\n                <p>\n                    Tem certeza que deseja desativar o distribuidor {this.state.razaoSocial}?\n                </p>\n                </Modal.Content>\n                <Modal.Actions>\n                <Button basic color='green' inverted onClick={this.onClose}>\n                    <Icon name='remove' /> Não\n                </Button>\n                <Button color='red' inverted onClick={this.onRemove}>\n                    <Icon name='checkmark' /> Sim\n                </Button>\n                </Modal.Actions>\n            </Modal>\n        )\n    }\n}\n\nexport default ClienteModalRemoveComponent","import React from 'react';\nimport { Container, Grid, Header, Segment, Button, Icon, Image, Accordion, Item } from 'semantic-ui-react'\nimport { getAll, upload, removeProduto, getPedido, uploadProduto, active, getCliente } from './api'\nimport { upload as uploadCliente } from './../cliente/api'\nimport { urlStorage } from './../app/api'\nimport ModalRemoveComponent from './ModalRemoveComponent'\nimport ModalProdutoComponent from './ModalProdutoComponent'\nimport ModalProdutoEditarComponent from './ModalProdutoEditarComponent'\nimport ModalRemoveClienteComponent from './../cliente/ModalRemoveComponent'\n\nclass DistribuidorComponent extends React.Component {\n\n    state = {\n        id: null,\n        distribuidores: [],\n        produtos: [],\n        pedidos: [],\n        clientes: [],\n        produtoId: null,\n        clienteId: null,\n        tabDetalhe: true,\n        tabProduto: false,\n        tabPedido: false,\n        tabCliente: false,\n        imagemPath: null,\n        activeIndex: 0\n    }\n\n    componentDidMount() {\n        this.get()\n    }\n\n    get = () => {\n        getAll().then(res => {\n            this.setState({                \n                distribuidores: res.data,\n                id: null,\n            })\n        })\n    }\n\n    getProdutos = (produto) => {\n        this.setState({                \n            produtos: [...this.state.produtos, produto]\n        })\n    }\n\n    onCadastrar = () => {\n        this.props.history.push('/admin/distribuidor/cadastrar');\n    }\n\n    onEditar = () => {\n        this.props.history.push('/admin/distribuidor/' + this.state.id + '/editar');\n    }\n\n    onSelect = (distribuidor) => {\n        this.setState({\n            ...distribuidor,\n            id: distribuidor._id,\n            produtos: distribuidor.produtos\n        })\n        getPedido(distribuidor._id).then(res => {\n            this.setState({\n                pedidos: res.data\n            })\n        })\n        getCliente(distribuidor._id).then(res => {\n            this.setState({\n                clientes: res.data\n            })\n        })\n    }\n\n    onTab = (tab) => {\n        if (tab === 'detalhe') this.setState({ tabDetalhe: true, tabProduto: false, tabPedido: false, tabCliente: false })\n        if (tab === 'produto') this.setState({ tabDetalhe: false, tabProduto: true, tabPedido: false, tabCliente: false })\n        if (tab === 'pedido') this.setState({ tabDetalhe: false, tabProduto: false, tabPedido: true, tabCliente: false })\n        if (tab === 'cliente') this.setState({ tabDetalhe: false, tabProduto: false, tabPedido: false, tabCliente: true })\n    }\n\n    onUpload = (e) => {\n        let file = e.target.files[0]\n        const data = new FormData() \n        data.append('file', file)\n        upload(data, this.state.id).then(res => {\n            this.get()\n        })\n    }\n\n    onUploadProduto = (e) => {\n        const { produtoId } = this.state\n        let file = e.target.files[0]\n        const data = new FormData() \n        data.append('file', file)\n        uploadProduto(data, this.state.id, produtoId).then(res => {\n            this.get()\n        })\n    }\n\n    onUploadProdutoSelect = (produtoId) => {\n        this.setState({ produtoId })\n    }\n    \n    onUploadCliente = (e) => {\n        const { clienteId } = this.state\n        let file = e.target.files[0]\n        const data = new FormData() \n        data.append('file', file)\n        uploadCliente(data, clienteId).then(res => {\n            this.get()\n        })\n    }\n    \n    onUploadClienteSelect = (clienteId) => {\n        this.setState({ clienteId })\n    }\n\n    onRemoverProduto = (produtoId) => {\n        const { produtos, id } = this.state\n        removeProduto({ id, produtoId }).then(res => {\n            let prds = []\n            produtos.forEach(p => {\n                if (p._id !== produtoId) prds.push(p)\n            })\n            this.setState({ produtos: prds })\n        })\n    }\n\n    onAtivar = (distribuidorId) => {\n        active(distribuidorId).then(res => {\n            this.get()\n        })\n    }\n\n    onCadastrarCliente = () => {\n        this.props.history.push('/admin/distribuidor/' + this.state.id + '/cliente/cadastrar');\n    }\n\n    onEditarCliente = (clienteId) => {\n        this.props.history.push('/admin/distribuidor/' + this.state.id + '/cliente/' + clienteId + '/editar');\n    }\n\n    handleClick = (e, titleProps) => {\n        const { index } = titleProps\n        const { activeIndex } = this.state\n        const newIndex = activeIndex === index ? -1 : index\n    \n        this.setState({ activeIndex: newIndex })\n    }\n    \n    render() {\n        const { \n            distribuidores, id, tabDetalhe, tabProduto, imagemPath, produtos, activeIndex, tabPedido, tabCliente,\n            nome, codId, razaoSocial, cnpj, telefone, responsavel, endereco, dadosPagamento, pedidos, clientes,\n            pagamento, categoria, active\n        } = this.state\n        return(\n            <Container>\n                <Grid>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Header as='h1'>\n                                Distribuidores\n                                <Button primary floated='right' onClick={this.onCadastrar}> \n                                    <Icon name='plus' /> Cadastrar \n                                </Button>\n                            </Header>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column width={5}>\n                            {distribuidores.length !== 0 ? (\n                                <Segment.Group>\n                                    {(distribuidores || []).map((d, i) => (\n                                        <div>\n                                            { id === d._id ? (\n                                                <Segment tertiary key={i} style={{ cursor: 'pointer' }} onClick={() => this.onSelect(d)}>{d.codId} - {d.nome}</Segment>\n                                            ) : (\n                                                <Segment key={i} style={{ cursor: 'pointer' }} onClick={() => this.onSelect(d)}>{d.codId} - {d.nome}</Segment>\n                                            )}\n                                        </div>\n                                    ))}\n                                </Segment.Group>\n                            ) : (\n                                <Header h=\"5\">Nenhum distribuidor cadastrado</Header>\n                            )}\n                        </Grid.Column>\n                        <Grid.Column width={11}>\n                            { id && (\n                                <div>\n                                    <Button.Group floated='left'>\n                                        { tabDetalhe ? (\n                                            <Button onClick={() => this.onTab('detalhe')} positive>Detalhes</Button>\n                                        ) : (\n                                            <Button onClick={() => this.onTab('detalhe')}>Detalhes</Button>\n                                        )}\n                                        { tabProduto ? (\n                                            <Button onClick={() => this.onTab('produto')} positive>Produtos</Button>\n                                        ) : (\n                                            <Button onClick={() => this.onTab('produto')}>Produtos</Button>\n                                        )}\n                                        { tabPedido ? (\n                                            <Button onClick={() => this.onTab('pedido')} positive>Pedidos</Button>\n                                        ) : (\n                                            <Button onClick={() => this.onTab('pedido')}>Pedidos</Button>\n                                        )}\n                                        { tabCliente ? (\n                                            <Button onClick={() => this.onTab('cliente')} positive>Clientes</Button>\n                                        ) : (\n                                            <Button onClick={() => this.onTab('cliente')}>Clientes</Button>\n                                        )}\n                                    </Button.Group>\n                                    <br />\n                                    { tabDetalhe && (\n                                        <Segment>\n                                            <Header as='h3'>\n                                                Empresa\n                                                {active ? (\n                                                    <ModalRemoveComponent getDistribuidor={this.get} distribuidor={{ id, razaoSocial }}>\n                                                        <Button color='red' floated='right'> \n                                                            <Icon name='archive' /> Desativar \n                                                        </Button>\n                                                    </ModalRemoveComponent>\n                                                ) : (\n                                                    <Button positive floated='right' onClick={() => this.onAtivar(id)}> \n                                                        <Icon name='check' /> Ativar \n                                                    </Button>\n                                                )}\n                                                <Button primary floated='right' onClick={this.onEditar}> \n                                                    <Icon name='edit' /> Editar \n                                                </Button>\n                                                <Button secundary floated='right' onClick={() => this.fileInput.click()}> \n                                                    <Icon name='camera' /> Alterar Capa\n                                                </Button>\n                                                <input\n                                                    type=\"file\"\n                                                    style={{ display: 'none' }}\n                                                    onChange={this.onUpload}\n                                                    ref={e => { this.fileInput = e }}\n                                                />       \n                                            </Header>\n                                            <br />\n                                            <Image src={imagemPath ? `${urlStorage}/${imagemPath}` : 'https://react.semantic-ui.com/images/wireframe/square-image.png'} size='medium' floated='right' rounded />\n                                            <p>Nome: {nome}</p>\n                                            <p>Código: {codId}</p>\n                                            <p>Razão Social: {razaoSocial}</p>\n                                            <p>CNPJ: {cnpj}</p>\n                                            <p>Telefone: {telefone}</p>\n                                            <p>Categoria: {categoria.nome}</p>\n                                            <Header as='h4'>Responsável</Header>\n                                            <p>Nome: {responsavel.nomeCompleto}</p>\n                                            <p>CPF: {responsavel.cpf}</p>\n                                            <p>RG: {responsavel.rg}</p>\n                                            <p>E-mail: {responsavel.email}</p>\n                                            <p>Celular: {responsavel.celular}</p>\n                                            <Header as='h4'>Endereço</Header>\n                                            <p>Endereço: {endereco.nomeEndereco}</p>\n                                            <p>Número: {endereco.numero}</p>\n                                            <p>Complemento: {endereco.complemento}</p>\n                                            <p>Bairro: {endereco.bairro}</p>\n                                            <p>CEP: {endereco.cep}</p>\n                                            <p>Cidade: {endereco.cidade}</p>\n                                            <p>Estado: {endereco.estado}</p>\n                                            <Header as='h4'>Pagamento</Header>\n                                            <p>Modelo de pagamento: {dadosPagamento.categoria.nome}</p>\n                                            <p>Valor: {dadosPagamento.valor}</p>\n                                            { responsavel.nomeCompleto == dadosPagamento.responsavel.nomeCompleto ? (\n                                                <Header as='h4'>Os dados de pagamento e o mesmo do responsável e endereço acima.</Header>\n                                            ) : (\n                                                <div>\n                                                    <Header as='h4'>Pagamento</Header>\n                                                    <p>Nome: {dadosPagamento.responsavel.nomeCompleto}</p>\n                                                    <p>CPF: {dadosPagamento.responsavel.cpf}</p>\n                                                    <p>RG: {dadosPagamento.responsavel.rg}</p>\n                                                    <p>E-mail: {dadosPagamento.responsavel.email}</p>\n                                                    <p>Celular: {dadosPagamento.responsavel.celular}</p>\n                                                    <p>Endereço: {dadosPagamento.endereco.nomeEndereco}</p>\n                                                    <p>Número: {dadosPagamento.endereco.numero}</p>\n                                                    <p>Complemento: {dadosPagamento.endereco.complemento}</p>\n                                                    <p>Bairro: {dadosPagamento.endereco.bairro}</p>\n                                                    <p>CEP: {dadosPagamento.endereco.cep}</p>\n                                                    <p>Cidade: {dadosPagamento.endereco.cidade}</p>\n                                                    <p>Estado: {dadosPagamento.endereco.estado}</p>\n                                                </div>\n                                            )}\n                                        </Segment>\n                                    )}\n                                    { tabProduto && (\n                                        <Segment style={{ marginRight: 30 }}>\n                                            <Header as='h3'>\n                                                <ModalProdutoComponent getProdutos={this.getProdutos} id={id}>\n                                                    <Button primary floated='right' size='tiny'> \n                                                        <Icon name='plus' /> Adicionar \n                                                    </Button>\n                                                </ModalProdutoComponent>\n                                                Produtos\n                                            </Header>\n                                            \n                                            {produtos.length !== 0 ? (\n                                                <Accordion>\n                                                    {(produtos || []).map((p, i) => (\n                                                        <div>\n                                                            <Accordion.Title active={activeIndex === i} index={i} onClick={this.handleClick}>\n                                                                <Icon name='dropdown' /> <strong>{p.nome}</strong>\n                                                            </Accordion.Title>\n                                                            <Accordion.Content active={activeIndex === i} style={{ marginBottom: 20 }}>\n                                                                <Image src={p.imagemPath ? `${urlStorage}/${p.imagemPath}` : 'https://react.semantic-ui.com/images/wireframe/square-image.png'} size='tiny' floated='left' rounded />\n                                                                {p.nome} - {p.categoria.nome}\n                                                                <br />\n                                                                R$: {p.valor}\n                                                                <br />\n                                                                {p.descricao}\n                                                                <br />\n                                                                <Button color='red' floated='right' onClick={() => this.onRemoverProduto(p._id)}> \n                                                                    <Icon name='cancel' /> Retirar \n                                                                </Button>\n                                                                <ModalProdutoEditarComponent get={this.get} produto={p} distribuidorId={id}>\n                                                                    <Button primary floated='right'> \n                                                                        <Icon name='edit' /> Editar \n                                                                    </Button>\n                                                                </ModalProdutoEditarComponent>\n                                                                <Button secundary floated='right' onClick={() => {\n                                                                    this.onUploadProdutoSelect(p._id)\n                                                                    return this.fileInput.click()\n                                                                }}> \n                                                                    <Icon name='camera' /> Alterar foto\n                                                                </Button>\n                                                                <input\n                                                                    type=\"file\"\n                                                                    style={{ display: 'none' }}\n                                                                    onChange={this.onUploadProduto}\n                                                                    ref={e => { this.fileInput = e }}\n                                                                /> \n                                                                <br />\n                                                            </Accordion.Content>\n                                                        </div>\n                                                    ))}\n                                                </Accordion>\n                                            ) : (\n                                                <Header as='h4'>Nenhum produto adicionado</Header>\n                                            )}\n                                        </Segment>\n                                    )}\n                                    { tabPedido && (\n                                        <Segment>\n                                            <Header as='h3'>Pedidos</Header>\n                                            <div>\n                                                { pedidos.length !== 0 ? (\n                                                    <Accordion>\n                                                        {(pedidos || []).map((p, i) => (\n                                                            <div>\n                                                                <Accordion.Title active={activeIndex === i} index={i} onClick={this.handleClick}>\n                                                                    <Icon name='dropdown' /> \n                                                                    <strong>\n                                                                        <small style={{ fontSize: 15 }}>Data da solicitação: {new Date(p.createdAt).toLocaleDateString('en-GB')}</small> | \n                                                                        <small style={{ fontSize: 15 }}> ValorTotal de R$ {p.valorTotal}</small> | \n                                                                        {p.cliente ? (<small style={{ fontSize: 15 }}> Cliente: {p.cliente.nome}</small>) : (<small style={{ fontSize: 15 }}> Cliente Id: {p.clienteId}</small>)} | \n                                                                        {p.entrega ? (\n                                                                            <small style={{ color: 'green', fontSize: 15 }} > Pedido entregue</small>                                                                        \n                                                                            ) : (\n                                                                            <small style={{ color: 'red', fontSize: 15 }}> Pedido não foi entregue</small>\n                                                                        )}\n                                                                    </strong>                                                                 \n                                                                </Accordion.Title>\n                                                                <Accordion.Content active={activeIndex === i}>\n                                                                    <Item.Group divided unstackable>\n                                                                        {(p.produtos || []).map((a, i) => (\n                                                                            <div>\n                                                                                <Item.Content style={{ marginBottom: 50 }}>\n                                                                                    <Item.Image size='tiny' src={a.imagemPath ? `${urlStorage}/${a.imagemPath}` : 'https://react.semantic-ui.com/images/wireframe/square-image.png'} size='tiny' floated='left' rounded />\n                                                                                    <Item.Header>\n                                                                                        {a.nome}\n                                                                                        <br />\n                                                                                        R$ {a.valor}\n                                                                                    </Item.Header>\n                                                                                    <Item.Description>\n                                                                                        <p>{a.descricao}</p>   \n                                                                                    </Item.Description>\n                                                                                </Item.Content>\n                                                                            </div>\n                                                                        ))}\n                                                                    </Item.Group>\n                                                                </Accordion.Content>\n                                                            </div>\n                                                        ))}\n                                                    </Accordion>\n                                                ) : (\n                                                    <Header as='h4'>Nenhum pedido solicitado.</Header>\n                                                )}\n                                            </div>\n                                        </Segment>\n                                    )}\n                                    { tabCliente && (\n                                        <Segment>\n                                            <Header as='h3'>\n                                                <Button primary floated='right' size='tiny' onClick={this.onCadastrarCliente}> \n                                                    <Icon name='plus' /> Cadastrar \n                                                </Button>\n                                                Clientes\n                                            </Header>\n                                            <div>\n                                                { clientes.length !== 0 ? (\n                                                    <Accordion>\n                                                        {(clientes || []).map((c, i) => (\n                                                            <div>\n                                                                <Accordion.Title active={activeIndex === i} index={i} onClick={this.handleClick}>\n                                                                    <Icon name='dropdown' /> \n                                                                    {c.nome}                                                              \n                                                                </Accordion.Title>\n                                                                <Accordion.Content active={activeIndex === i}>\n                                                                    <Item.Group divided unstackable>\n                                                                        <Item>\n                                                                            <Item.Image size='tiny' src={c.imagemPath ? `${urlStorage}/${c.imagemPath}` : 'https://react.semantic-ui.com/images/wireframe/square-image.png'} />\n                                                                            <Item.Content>\n                                                                                <Item.Header>{c.nome}</Item.Header>\n                                                                                <Item.Description>\n                                                                                    <p>Código: {c.codId}</p>\n                                                                                    <p>CPF: {c.cpf}</p>\n                                                                                    <p>RG: {c.rg}</p>\n                                                                                    <p>E-mail: {c.email}</p>\n                                                                                    <p>Telefone: {c.telefone}</p>\n                                                                                    <p>Celular: {c.celular}</p>\n                                                                                    <p>Endereço: {endereco.nomeEndereco}</p>\n                                                                                    <p>Número: {endereco.numero}</p>\n                                                                                    <p>Complemento: {endereco.complemento}</p>\n                                                                                    <p>Bairro: {endereco.bairro}</p>\n                                                                                    <p>CEP: {endereco.cep}</p>\n                                                                                    <p>Cidade: {endereco.cidade}</p>\n                                                                                    <p>Estado: {endereco.estado}</p>\n                                                                                </Item.Description>\n                                                                                <ModalRemoveClienteComponent getCliente={this.get} cliente={{ id: c._id, nome: c.nome }}>\n                                                                                    <Button color='red' floated='right'> \n                                                                                        <Icon name='archive' /> Desativar \n                                                                                    </Button>\n                                                                                </ModalRemoveClienteComponent>\n                                                                                <Button primary floated='right' onClick={() => this.onEditarCliente(c._id)}> \n                                                                                    <Icon name='edit' /> Editar \n                                                                                </Button>\n                                                                                <Button secundary floated='right' onClick={() => {\n                                                                                    this.onUploadClienteSelect(c._id)\n                                                                                    return this.fileInput.click()\n                                                                                }}> \n                                                                                    <Icon name='camera' /> Alterar foto\n                                                                                </Button>\n                                                                                <input\n                                                                                    type=\"file\"\n                                                                                    style={{ display: 'none' }}\n                                                                                    onChange={this.onUploadCliente}\n                                                                                    ref={e => { this.fileInput = e }}\n                                                                                /> \n                                                                                <br />\n                                                                            </Item.Content>\n                                                                        </Item>\n                                                                    </Item.Group>\n                                                                </Accordion.Content>\n                                                            </div>\n                                                        ))}\n                                                    </Accordion>\n                                                ) : (\n                                                    <Header as='h4'>Nenhum cliente cadastrado.</Header>\n                                                )}\n                                            </div>\n                                        </Segment>\n                                    )}\n                                </div>\n                            )}\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Container>\n        )\n    }\n}\n\nexport default DistribuidorComponent","import React from 'react'\nimport { Button, Form, Header, Container, Icon, Grid, Image, Select, Checkbox, Message } from 'semantic-ui-react'\nimport { create, update, get, upload, getConta } from './api'\nimport { getAllPagamento, getAllDistribuidor } from '../categoria/api'\nimport { urlStorage } from './../app/api'\n\nclass DistribuidorModalComponent extends React.Component {\n    \n    state = {\n        id: null,\n        contaId: null,\n        pagamentoId: null,\n        categoriaId: null,\n        nome: '',\n        razaoSocial: '',\n        cnpj: '',\n        telefone: '',\n        login: null,\n        senha: null,\n        nomeEndereco: '',\n        numero: '',\n        complemento: '',\n        bairro: '',\n        cep: '',\n        cidade: '',\n        estado: '',\n        nomeCompleto: '',\n        cpf: '',\n        rg: '',\n        email: '',\n        celular: '',\n        pgNomeCompleto: '', \n        pgCpf: '',\n        pgRg: '',\n        pgEmail: '', \n        pgCelular: '',\n        pgNomeEndereco: '',\n        pgNumero:'',\n        pgComplemento:'',\n        pgCep:'',\n        pgBairro:'',\n        pgCidade:'',\n        pgEstado:'',\n        valor: null,\n        pagamentos: [],\n        pagamento: null,\n        categorias: [],\n        categoria: null,\n        checked: true,\n        msgError: null,\n        imagemPath: null,\n        image: null,\n        file: null,\n    }\n\n    componentDidMount() {\n        const { distribuidorId } = this.props.match.params\n        if (distribuidorId) {\n            get(distribuidorId).then(res => {\n                const distribuidor = res.data                \n                if (distribuidor.responsavel.nomeCompleto === distribuidor.dadosPagamento.responsavel.nomeCompleto) {\n                    this.setState({\n                        ...distribuidor,\n                        ...distribuidor.responsavel,\n                        ...distribuidor.endereco,\n                        id: distribuidor._id,\n                        pagamentoId: distribuidor.dadosPagamento.categoria._id,\n                        valor: distribuidor.dadosPagamento.valor,\n                        categoriaId: distribuidor.categoria._id,\n                    })\n                } else {\n                    this.setState({\n                        ...distribuidor,\n                        ...distribuidor.responsavel,\n                        ...distribuidor.endereco,\n                        id: distribuidor._id,\n                        pagamentoId: distribuidor.dadosPagamento.categoria._id,\n                        valor: distribuidor.dadosPagamento.valor,\n                        categoriaId: distribuidor.categoria._id,\n                        pgNomeCompleto:  distribuidor.dadosPagamento.responsavel.nomeCompleto, \n                        pgCpf:  distribuidor.dadosPagamento.responsavel.cpf, \n                        pgRg:  distribuidor.dadosPagamento.responsavel.rg, \n                        pgEmail:  distribuidor.dadosPagamento.responsavel.email, \n                        pgCelular:  distribuidor.dadosPagamento.responsavel.celular,\n                        pgNomeEndereco:  distribuidor.dadosPagamento.endereco.nomeEndereco, \n                        pgNumero: distribuidor.dadosPagamento.endereco.numeto, \n                        pgComplemento: distribuidor.dadosPagamento.endereco.complemento, \n                        pgCep: distribuidor.dadosPagamento.endereco.cep, \n                        pgBairro: distribuidor.dadosPagamento.endereco.bairro,\n                        pgCidade: distribuidor.dadosPagamento.endereco.cidade,\n                        pgEstado: distribuidor.dadosPagamento.endereco.estado,\n                        checked: false,\n                    })      \n                }\n                return getConta(distribuidorId)                          \n            }).then(res => {\n                const conta = res.data\n                this.setState({\n                    login: conta.login,\n                    senha: conta.senha,\n                    contaId: conta._id\n                })\n            })\n        }\n        getAllPagamento().then(res => {\n            this.setState({ pagamentos: res.data })\n        })\n        getAllDistribuidor().then(res => {\n            this.setState({ categorias: res.data })\n        })\n    }\n\n    onVoltar = () => {\n        this.props.history.push('/admin/distribuidor');\n    }\n\n    onChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    onChangeImagem = (e) => {\n        let file = e.target.files[0]\n        this.setState({\n            image: URL.createObjectURL(file),\n            file\n        })\n    }\n\n    toggle = () => {\n        this.setState({ checked: !this.state.checked })\n    }\n\n    onPagamentoSelected = (e, { value }) => {\n        this.setState({\n            pagamento: value\n        })\n    }\n\n    onDistribuidorSelected = (e, { value }) => {\n        this.setState({\n            categoria: value\n        })\n    }\n\n    onSalvar = () => {\n        const { \n            nome, razaoSocial, cnpj, telefone, \n            nomeCompleto, cpf, rg, email, celular,\n            nomeEndereco, numero, complemento, cep, bairro, cidade, estado,\n            pgNomeCompleto, pgCpf, pgRg, pgEmail, pgCelular,\n            pgNomeEndereco, pgNumero, pgComplemento, pgCep, pgBairro, pgCidade, pgEstado,\n            pagamento, categoria, id, checked, file, pagamentoId, categoriaId,\n            login, senha, valor, contaId,\n        } = this.state\n        let pgDados = null\n        if (checked) {\n            pgDados = {\n                endereco: {\n                    nomeEndereco, \n                    numero, \n                    complemento, \n                    cep, \n                    bairro, \n                    cidade,\n                    estado,\n                },\n                responsavel: {\n                    nomeCompleto,\n                    cpf,\n                    rg,\n                    email,\n                    celular\n                }\n            }\n        } else {\n            pgDados = {\n                endereco: {\n                    nomeEndereco: pgNomeEndereco,\n                    numero: pgNumero,\n                    complemento: pgComplemento,\n                    cep: pgCep,\n                    bairro: pgBairro,\n                    cidade: pgCidade,\n                    estado: pgEstado\n                },\n                responsavel: {\n                    nomeCompleto: pgNomeCompleto,\n                    cpf: pgCpf,\n                    rg: pgRg,\n                    email: pgEmail,\n                    celular: pgCelular\n                }\n            }\n        }\n        if (!pagamento && !pagamentoId) {\n            this.setState({ msgError: 'Por favor, selecione o modelo de pagamento.' })\n        } else if (!categoria && !categoriaId) {\n            this.setState({ msgError: 'Por favor, selecione a categoria.' })\n        } else {\n            if (id) {\n                update({\n                    nome, razaoSocial, cnpj, telefone, id,\n                    nomeCompleto, cpf, rg, email, celular,\n                    nomeEndereco, numero, complemento, cep, bairro, cidade, estado,\n                    pagamentoId: pagamento ? pagamento : pagamentoId,\n                    categoriaId: categoria ? categoria : categoriaId,\n                    login, senha, pgDados, valor, contaId,\n                }).then(() => {\n                    this.onVoltar()\n                })\n            } else {\n                create({\n                    nome, razaoSocial, cnpj, telefone,\n                    nomeCompleto, cpf, rg, email, celular,\n                    nomeEndereco, numero, complemento, cep, bairro, cidade, estado,\n                    pagamentoId: pagamento ? pagamento : pagamentoId,\n                    categoriaId: categoria ? categoria : categoriaId,\n                    login: login ? login : nome,\n                    senha: senha ? senha : nome,\n                    pgDados, valor,\n                }).then(res => {\n                    if (file) {\n                        const data = new FormData() \n                        data.append('file', file)\n                        return upload(data, res.data)\n                    } else {\n                        return null\n                    }\n                }).then(() => {\n                    this.onVoltar()\n                })\n            }\n        }\n    }\n\n    img = () => {\n        const { image, imagemPath } = this.state\n        if (image) {\n            return <Image wrapped size='medium' src={image} />\n        } else  if (imagemPath) {\n            return <Image wrapped size='medium' src={`${urlStorage}/${imagemPath}`} />\n        } else {\n            return <Image wrapped size='medium' src='https://react.semantic-ui.com/images/wireframe/square-image.png' />\n        }\n    }\n\n    render() {\n        const { \n            nome, razaoSocial, cnpj, telefone, categorias, categoria,\n            nomeCompleto, cpf, rg, email, celular,\n            nomeEndereco, numero, complemento, cep, bairro, cidade, estado,\n            pgNomeCompleto, pgCpf, pgRg, pgEmail, pgCelular,\n            pgNomeEndereco, pgNumero, pgComplemento, pgCep, pgBairro, pgCidade, pgEstado,\n            pagamentos, pagamento, msgError, id, login, senha, valor\n        } = this.state\n        return (\n            <Container>\n                <Grid>\n                    <Grid.Row>\n                        <Grid.Column width={11}>\n                            <Button primary onClick={this.onVoltar}>\n                                <Icon name='angle left' /> Voltar\n                            </Button>\n                        </Grid.Column>\n                        <Grid.Column width={5}>\n                            <Header as='h2'>\n                                Novo distribuidor\n                            </Header>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column width={10}>\n                            <Form style={{ paddingTop: 20}} onSubmit={this.onSalvar}>\n                                <Header as='h3'>Empresa</Header>\n                                <Form.Group>\n                                    <Form.Input width={10} label=\"Nome\" name=\"nome\" value={nome} onChange={this.onChange}/>\n                                    <Form.Field\n                                        width={6}\n                                        control={Select}\n                                        label='Categoria'\n                                        name='categoria'\n                                        options={categorias.map(cat => {\n                                            return { key: cat._id, text: cat.nome, value: cat._id }\n                                        })}\n                                        onChange={this.onDistribuidorSelected}\n                                        required\n                                    />\n                                </Form.Group>\n                                <Form.Input width={16} label=\"Razão Social\" name=\"razaoSocial\" value={razaoSocial} onChange={this.onChange}/>\n                                <Form.Group>\n                                    <Form.Input width={8} label=\"CNPJ\" name=\"cnpj\" value={cnpj} onChange={this.onChange}/>\n                                    <Form.Input width={8} label=\"Telefone\" name=\"telefone\" value={telefone} onChange={this.onChange}/>\n                                </Form.Group>\n                                <Header as='h3'>Acesso</Header>\n                                <Form.Group>\n                                    <Form.Input width={8} label=\"Login\" name=\"login\" value={login} onChange={this.onChange}/>\n                                    <Form.Input width={8} label=\"Senha\" name=\"senha\" value={senha} onChange={this.onChange}/>\n                                </Form.Group>\n                                <Header as='h3'>Responsável</Header>\n                                <Form.Group>\n                                    <Form.Input width={11} label=\"Nome completo\" name=\"nomeCompleto\" value={nomeCompleto} onChange={this.onChange}/>\n                                    <Form.Input width={5} label=\"CPF\" name=\"cpf\" value={cpf} onChange={this.onChange}/>\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Input width={5} label=\"RG\" name=\"rg\" value={rg} onChange={this.onChange}/>\n                                    <Form.Input width={6} label=\"Email\" name=\"email\" value={email} onChange={this.onChange}/>\n                                    <Form.Input width={5} label=\"Celular\" name=\"celular\" value={celular} onChange={this.onChange}/>\n                                </Form.Group>\n                                <Header as='h3'>Endereço</Header>\n                                <Form.Group>\n                                    <Form.Input width={10} label=\"Endereço\" name=\"nomeEndereco\" value={nomeEndereco} onChange={this.onChange}/>\n                                    <Form.Input width={2} label=\"Número\" name=\"numero\" value={numero} onChange={this.onChange}/>\n                                    <Form.Input width={4} label=\"Complemento\" name=\"complemento\" value={complemento} onChange={this.onChange}/>\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Input width={6} label=\"Bairro\" name=\"bairro\" value={bairro} onChange={this.onChange}/>\n                                    <Form.Input width={3} label=\"CEP\" name=\"cep\" value={cep} onChange={this.onChange}/>\n                                    <Form.Input width={5} label=\"Cidade\" name=\"cidade\" value={cidade} onChange={this.onChange}/>\n                                    <Form.Input width={2} label=\"Estado\" name=\"estado\" value={estado} onChange={this.onChange}/>\n                                </Form.Group>\n                                <Header as='h3'>Pagamento</Header>\n                                <Form.Group>\n                                    <Form.Field\n                                        width={8}\n                                        control={Select}\n                                        label='Modelo de pagamento'\n                                        name='pagamento'\n                                        options={pagamentos.map(pg => {\n                                            return { key: pg._id, text: pg.nome, value: pg._id }\n                                        })}\n                                        onChange={this.onPagamentoSelected}\n                                        required\n                                    />\n                                    <Form.Input type=\"number\" width={8} label=\"Valor\" name=\"valor\" value={valor} onChange={this.onChange}/>\n                                </Form.Group>\n                                <Checkbox label='Os dados de cobrança são os mesmos do responsável e endereço acima?' onChange={this.toggle} checked={this.state.checked} />\n                                {!this.state.checked && (\n                                    <div style={{ paddingTop: 10 }}>\n                                        <Form.Group>\n                                            <Form.Input width={11} label=\"Nome completo\" name=\"pgNomeCompleto\" value={pgNomeCompleto} onChange={this.onChange}/>\n                                            <Form.Input width={5} label=\"CPF\" name=\"pgCpf\" value={pgCpf} onChange={this.onChange}/>\n                                        </Form.Group>\n                                        <Form.Group>\n                                            <Form.Input width={5} label=\"RG\" name=\"pgRg\" value={pgRg} onChange={this.onChange}/>\n                                            <Form.Input width={6} label=\"Email\" name=\"pgEmail\" value={pgEmail} onChange={this.onChange}/>\n                                            <Form.Input width={5} label=\"Celular\" name=\"pgCelular\" value={pgCelular} onChange={this.onChange}/>\n                                        </Form.Group>\n                                        <Form.Group>\n                                            <Form.Input width={10} label=\"Endereço\" name=\"pgNomeEndereco\" value={pgNomeEndereco} onChange={this.onChange}/>\n                                            <Form.Input width={2} label=\"Número\" name=\"pgNumero\" value={pgNumero} onChange={this.onChange}/>\n                                            <Form.Input width={4} label=\"Complemento\" name=\"pgComplemento\" value={pgComplemento} onChange={this.onChange}/>\n                                        </Form.Group>\n                                        <Form.Group>\n                                            <Form.Input width={6} label=\"Bairro\" name=\"pgBairro\" value={pgBairro} onChange={this.onChange}/>\n                                            <Form.Input width={3} label=\"CEP\" name=\"pgCep\" value={pgCep} onChange={this.onChange}/>\n                                            <Form.Input width={5} label=\"Cidade\" name=\"pgCidade\" value={pgCidade} onChange={this.onChange}/>\n                                            <Form.Input width={2} label=\"Estado\" name=\"pgEstado\" value={pgEstado} onChange={this.onChange}/>\n                                        </Form.Group>\n                                    </div>\n                                )}\n                            </Form>\n                        </Grid.Column>\n                        <Grid.Column width={4} >\n                            {this.img()}\n                            {!id && (\n                                <div>\n                                    <input\n                                        type=\"file\"\n                                        style={{ display: 'none' }}\n                                        onChange={this.onChangeImagem}\n                                        ref={e => { this.fileInput = e }}/>\n                                    <Button attached='bottom' onClick={() => this.fileInput.click()}>Adicionar Capa</Button>\n                                </div>\n                            )}\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column style={{ paddingBottom: 20 }} >\n                            <Button primary type='submit' onClick={this.onSalvar}>\n                                <Icon name='plus' /> Adicionar\n                            </Button>\n                            { msgError && (\n                                <Message floated='left' compact warning>\n                                    {msgError}\n                                </Message>\n                            )}\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Container>\n        )\n    }\n}\n\nexport default DistribuidorModalComponent","import React from 'react'\nimport { Button, Form, Icon, Modal, Select, Image, Grid, Message } from 'semantic-ui-react'\nimport { getAllProduto } from '../categoria/api'\nimport { create, update, upload } from './api'\nimport { urlStorage } from './../app/api'\n\nclass ProdutoModalComponent extends React.Component {\n    \n    state = {\n        modalOpen: false,\n        id: null,\n        nome: '',\n        descricao: '',\n        valor: null,\n        categorias: [],\n        categoria: null,\n        categoriaId: null,\n        msgError: null,\n        categoria_nome: '',\n        imagemPath: null,\n        image: null,\n        file: null,\n    }\n\n    onOpen = () => {\n        const produto = {...this.props.produto}\n        getAllProduto().then((res) => {\n            if (produto.id) {\n                this.setState({ \n                    modalOpen: true,\n                    categorias: res.data || [],\n                    ...this.props.produto,\n                    imagemPath: this.props.produto.imagemPath ? `${urlStorage}/${this.props.produto.imagemPath}` : null,\n                    categoriaId: this.props.produto.categoria._id,\n                })\n            } else {\n                this.setState({ \n                    categorias: res.data || [],\n                    modalOpen: true,\n                    id: null,\n                    nome: '',\n                    descricao: '',\n                    valor: null,\n                    categoria: null,\n                    msgError: null,\n                    categoria_nome: '',\n                    imagemPath: null,\n                    image: null,\n                    file: null,\n                })\n            }\n        })\n    }\n    \n    onClose = () => {\n        this.setState({ modalOpen: false })\n    }\n\n    onChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    onCategoriaSelected = (e, { value }) => {\n        this.setState({\n            categoria: value\n        })\n    }\n\n    onChangeImagem = (e) => {\n        let file = e.target.files[0]\n        this.setState({\n            image: URL.createObjectURL(file),\n            file\n        })\n    }\n\n    onSalvar = () => {\n        const { id, nome, descricao, valor, categoria, file, categoriaId } = this.state\n        if (categoria) {\n            if (id) {\n                update({\n                    id,\n                    categoriaId: categoria ? categoria : categoriaId,\n                    nome,\n                    descricao,\n                    valor,\n                }).then(res => {\n                    this.onClose()\n                    this.setState({ msgError: null })\n                    this.props.getProdutos(res.data)\n                })\n            } else {\n                create({\n                    categoriaId: categoria,\n                    nome,\n                    descricao,\n                    valor,\n                }).then(res => {\n                    if (file) {\n                        const data = new FormData() \n                        data.append('file', file)\n                        return upload(data, res.data)\n                    } else {\n                        return null\n                    }\n                }).then(() => {\n                    this.onClose()\n                    this.setState({ msgError: null })\n                    this.props.getProdutos()\n                })\n            }\n        } else {\n            this.setState({ msgError: 'Por favor, selecione a categoria.' })\n        }\n    }\n\n    img = () => {\n        const { image, imagemPath } = this.state\n        if (image) {\n            return <Image wrapped size='medium' src={image} />\n        } else  if (imagemPath) {\n            return <Image wrapped size='medium' src={imagemPath} />\n        } else {\n            return <Image wrapped size='medium' src='https://react.semantic-ui.com/images/wireframe/square-image.png' />\n        }\n    }\n\n    render() {\n        const { id, nome, descricao, valor, categorias, categoria_nome, msgError } = this.state\n        return (\n            <Modal\n                trigger={this.props.children}\n                open={this.state.modalOpen}\n                onClose={this.onClose}\n                onOpen={this.onOpen}\n            >\n                <Icon link size='large' name='cancel' style={{ float: 'right', margin: '10px' }} onClick={this.onClose}/>\n                <Modal.Header>Produto</Modal.Header>\n                <Modal.Content>\n                    <Modal.Description>\n                        <Form onSubmit={this.onSalvar}>\n                            <Grid>\n                                <Grid.Column width={4}>\n                                    {this.img()}\n                                    {!id && (\n                                        <div>\n                                            <input\n                                                type=\"file\"\n                                                style={{ display: 'none' }}\n                                                onChange={this.onChangeImagem}\n                                                ref={e => { this.fileInput = e }}/>\n                                            <Button attached='bottom' onClick={() => this.fileInput.click()}>Adicionar foto</Button>\n                                        </div>\n                                    )}\n                                </Grid.Column>\n                                <Grid.Column width={12}>\n                                    <Form.Group>\n                                        <Form.Field\n                                            width={8}\n                                            control={Select}\n                                            label='Categoria'\n                                            name='categoria'\n                                            options={categorias.map(categoria => {\n                                                return { key: categoria._id, text: categoria.nome, value: categoria._id }\n                                            })}\n                                            onChange={this.onCategoriaSelected}\n                                        />\n                                        <Form.Input type=\"number\" width={8} label=\"Valor\" name=\"valor\" value={valor} onChange={this.onChange}/>\n                                    </Form.Group>\n                                    <Form.Input label=\"Nome\" name=\"nome\" value={nome} onChange={this.onChange}/>\n                                    <Form.TextArea label=\"Descrição\" name=\"descricao\" value={descricao} onChange={this.onChange}/>\n                                </Grid.Column>\n                            </Grid>\n                        </Form>\n                    </Modal.Description>\n                </Modal.Content>\n                <Modal.Actions>\n                    { msgError && (\n                        <Message floated='left' compact warning>\n                            {msgError}\n                        </Message>\n                    )}\n                    <Button primary type='submit' onClick={this.onSalvar}>\n                        <Icon name=\"plus\" />\n                        Salvar\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n        )\n    }\n}\n\nexport default ProdutoModalComponent","import React from 'react';\nimport { Container, Image, Grid, Header, Segment, Button, Icon } from 'semantic-ui-react'\nimport { getAll, remove, upload } from './api'\nimport { urlStorage } from './../app/api'\nimport ModalCadastroComponent from './ModalCadastroComponent'\n\nclass ProdutoEstoqueComponent extends React.Component {\n\n    state = {\n        produtos: [],\n        id: null,\n        imagemPath: null\n    }\n\n    componentDidMount() {\n        this.get()\n    }\n\n    get = () => {\n        getAll().then(res => {\n            this.setState({\n                produtos: res.data,\n                id: null,\n            })\n        })\n    }\n\n    getUpdate = (produto) => {\n        this.get()\n        this.setState({ ...produto })\n    }\n\n    onSelect = (produto) => {\n        this.setState({ \n            id: produto._id,\n            ...produto\n        })\n    }\n\n    onRemover = () => {\n        remove(this.state.id).then(() => {\n            this.get()\n            this.setState({ id: null })\n        })\n    }\n\n    onUpload = (e) => {\n        let file = e.target.files[0]\n        const data = new FormData() \n        data.append('file', file)\n        upload(data, this.state.id).then(res => {\n            this.get()\n        })\n    }\n\n    render() {\n        const { produtos, id, nome, valor, descricao, observacao, categoria, imagemPath } = this.state\n        return(\n            <Container>\n                <Grid>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Header as='h1'>\n                                Produtos\n                                <ModalCadastroComponent getProdutos={this.get}>\n                                    <Button primary floated='right'> \n                                        <Icon name='plus' /> Cadastrar \n                                    </Button>\n                                </ModalCadastroComponent>\n                            </Header>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column width={5}>\n                                {produtos.length !== 0 ? (\n                                    <Segment.Group>\n                                        {(produtos || []).map((p, i) => (\n                                            <div>\n                                                { id === p._id ? (\n                                                    <Segment tertiary key={i} style={{ cursor: 'pointer' }} onClick={() => this.onSelect(p)}>{p.nome}<br /><small>{p.categoria.nome}</small></Segment>\n                                                ) : (\n                                                    <Segment key={i} style={{ cursor: 'pointer' }} onClick={() => this.onSelect(p)}>{p.nome}<br /><small>{p.categoria.nome}</small></Segment>\n                                                )}\n                                            </div>\n                                        ))}\n                                    </Segment.Group>\n                                ) : (\n                                    <Header h=\"5\">Nenhum produto cadastrado</Header>\n                                )}\n                        </Grid.Column>\n                        <Grid.Column width={11}>\n                            {id && (\n                                <Segment>\n                                    <Image src={imagemPath ? `${urlStorage}/${imagemPath}` : 'https://react.semantic-ui.com/images/wireframe/square-image.png'} size='medium' floated='right' rounded />\n                                    <ModalCadastroComponent getProdutos={this.getUpdate} produto={{ id, nome, valor, descricao, observacao, categoria, categoria_nome: categoria.nome, imagemPath }}>\n                                        <Button primary> \n                                            <Icon name='edit' /> Editar \n                                        </Button>\n                                    </ModalCadastroComponent>\n                                    <Button secundary onClick={() => this.fileInput.click()}> \n                                        <Icon name='camera' /> Alterar Foto \n                                    </Button>\n                                    <input\n                                        type=\"file\"\n                                        style={{ display: 'none' }}\n                                        onChange={this.onUpload}\n                                        ref={e => { this.fileInput = e }}\n                                    />                                        \n                                    <Header as='h3'>\n                                        Detalhes do produto\n                                    </Header>\n                                    <p>Nome: {nome}</p>\n                                    <p>Valor: R$ {valor}</p>\n                                    <p>Categoria: {categoria.nome}</p>\n                                    <p>Descrição: {descricao}</p>\n                                    <Button color='red' style={{ marginTop: 20 }} onClick={this.onRemover}> \n                                        <Icon name='trash' /> Excluir \n                                    </Button>\n                                    <br />\n                                </Segment>\n                            )}\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Container>\n        )\n    }\n}\n\nexport default ProdutoEstoqueComponent","import React from 'react'\nimport { Button, Form, Icon, Modal } from 'semantic-ui-react'\nimport { \n    addProduto, addDistribuidor, addPagamento,\n    editProduto, editDistribuidor, editPagamento,\n    delProduto, delDistribuidor, delPagamento,\n} from './api'\n\n\nclass CategoriaModalComponent extends React.Component {\n    \n    state = {\n        modalOpen: false,\n        id: null,\n        nome: '',\n    }\n\n    onOpen = () => {\n        this.setState({ \n            modalOpen: true, \n            id: this.props._id,\n            nome: this.props.nome\n        })\n    }\n    \n    onClose = () => {\n        this.setState({ modalOpen: false })\n    }\n\n    onChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    onSalvar = () => {\n        const { nome, id } = this.state\n        const { tipo } = this.props\n\n        if (id) {\n            if (tipo === 'produto') {\n                editProduto({\n                    id,\n                    nome\n                }).then(() => {\n                    this.onClose()\n                    this.props.get()\n                })\n            } else if (tipo === 'distribuidor') {\n                editDistribuidor({\n                    id,\n                    nome\n                }).then(() => {\n                    this.onClose()\n                    this.props.get()\n                })\n            } else if (tipo === 'pagamento') {\n                editPagamento({\n                    id,\n                    nome\n                }).then(() => {\n                    this.onClose()\n                    this.props.get()\n                })\n            }\n        } else {\n            if (tipo === 'produto') {\n                addProduto({\n                    nome\n                }).then(() => {\n                    this.onClose()\n                    this.props.get()\n                })\n            } else if (tipo === 'distribuidor') {\n                addDistribuidor({\n                    nome\n                }).then(() => {\n                    this.onClose()\n                    this.props.get()\n                })\n            } else if (tipo === 'pagamento') {\n                addPagamento({\n                    nome\n                }).then(() => {\n                    this.onClose()\n                    this.props.get()\n                })\n            }\n        }\n    }\n\n    onRemover = () => {\n        const { id } = this.state\n        const { tipo } = this.props\n        if (tipo === 'produto') {\n            delProduto(id).then(() => {\n                this.onClose()\n                this.props.get()\n            })\n        } else if (tipo === 'distribuidor') {\n            delDistribuidor(id).then(() => {\n                this.onClose()\n                this.props.get()\n            })\n        } else if (tipo === 'pagamento') {\n            delPagamento(id).then(() => {\n                this.onClose()\n                this.props.get()\n            })\n        }\n    }\n\n    render() {\n        return (\n            <Modal\n                trigger={this.props.children}\n                open={this.state.modalOpen}\n                onClose={this.onClose}\n                onOpen={this.onOpen}\n                size=\"tiny\"\n            >\n                <Icon link size='large' name='cancel' style={{ float: 'right', margin: '10px' }} onClick={this.onClose}/>\n                <Modal.Header>\n                    { this.props.tipo === 'produto' && (\"Categoria Produto\") }\n                    { this.props.tipo === 'distribuidor' && (\"Categoria Distribuidor\") }\n                    { this.props.tipo === 'pagamento' && (\"Categoria Pagamento\") }\n                </Modal.Header>\n                <Modal.Content>\n                    <Form onSubmit={this.onSalvar}>\n                        <Form.Input label=\"Nome\" name=\"nome\" value={this.state.nome} onChange={this.onChange}/>\n                    </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                    { this.state.id && (\n                        <Button color=\"red\" floated=\"left\" onClick={this.onRemover}>\n                            <Icon name=\"trash\" />\n                            Excluir\n                        </Button>\n                    )}\n                    <Button primary type='submit' onClick={this.onSalvar}>\n                        <Icon name=\"plus\" />\n                        Salvar\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n        )\n    }\n}\n\nexport default CategoriaModalComponent","import React from 'react';\nimport { Container, Table, Grid, Header, Button } from 'semantic-ui-react'\nimport ModalComponent from './ModalComponent'\nimport { getAllProduto, getAllDistribuidor, getAllPagamento } from './api'\n\nclass CategoriaComponent extends React.Component {\n    \n    state = {\n        produtos: null,\n        distribuidores: null,\n        pagamentos: null,\n    }\n\n    componentDidMount() {\n        this.get()\n    }\n\n    get = () => {\n        getAllProduto().then(res => {\n            this.setState({ produtos: res.data })\n        })\n        getAllDistribuidor().then(res => {\n            this.setState({ distribuidores: res.data })\n        })\n        getAllPagamento().then(res => {\n            this.setState({ pagamentos: res.data })\n        })\n    }\n\n    render() {\n        \n        const { produtos, distribuidores, pagamentos } = this.state\n\n        return(\n            <Container>\n                <Grid columns='equal'>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Header as='h1'>Categorias</Header>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Table selectable>\n                                <Table.Header>\n                                    <Table.Row>\n                                        <Table.HeaderCell>\n                                            <small style={{ fontSize: 20 }}>Produto</small>\n                                            <ModalComponent tipo=\"produto\" get={this.get}>\n                                                <Button circular primary floated='right' icon='plus' />\n                                            </ModalComponent>\n                                        </Table.HeaderCell>\n                                    </Table.Row>\n                                </Table.Header>\n                                <Table.Body>\n                                    {(produtos || []).map((p, i) => (\n                                        <ModalComponent tipo=\"produto\" get={this.get} {...p}>\n                                            <Table.Row key={i} style={{ cursor: 'pointer' }}>\n                                                <Table.Cell>{p.nome}</Table.Cell>\n                                            </Table.Row>\n                                        </ModalComponent>\n                                    ))}\n                                </Table.Body>\n                            </Table>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Table selectable>\n                                <Table.Header>\n                                    <Table.Row>\n                                        <Table.HeaderCell>\n                                            <small style={{ fontSize: 20 }}>Distribuidor</small>\n                                            <ModalComponent tipo=\"distribuidor\" get={this.get}>\n                                                <Button circular primary floated='right' icon='plus' />\n                                            </ModalComponent>\n                                        </Table.HeaderCell>\n                                    </Table.Row>\n                                </Table.Header>\n                                <Table.Body>\n                                    {(distribuidores || []).map((d, i) => (\n                                        <ModalComponent tipo=\"distribuidor\" get={this.get} {...d}>\n                                            <Table.Row key={i} style={{ cursor: 'pointer' }}>\n                                                <Table.Cell>{d.nome}</Table.Cell>\n                                            </Table.Row>\n                                        </ModalComponent>\n                                    ))}\n                                </Table.Body>\n                            </Table>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Table selectable>\n                                <Table.Header>\n                                    <Table.Row>\n                                        <Table.HeaderCell>\n                                            <small style={{ fontSize: 20 }}>Pagamento</small>\n                                            <ModalComponent tipo=\"pagamento\" get={this.get}>\n                                                <Button circular primary floated='right' icon='plus' />                                            \n                                            </ModalComponent>\n                                        </Table.HeaderCell>\n                                    </Table.Row>\n                                </Table.Header>\n                                <Table.Body>\n                                    {(pagamentos || []).map((p, i) => (\n                                        <ModalComponent tipo=\"pagamento\" get={this.get} {...p}>\n                                            <Table.Row key={i} style={{ cursor: 'pointer' }}>\n                                                <Table.Cell>{p.nome}</Table.Cell>\n                                            </Table.Row>\n                                        </ModalComponent>\n                                    ))}\n                                </Table.Body>\n                            </Table>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Container>\n        )\n    }\n}\n\nexport default CategoriaComponent","import React from 'react'\nimport { Button, Form, Icon, Container, Grid, Header, Message, Image, Select } from 'semantic-ui-react'\nimport { create, update, get, upload } from './api'\nimport { getAll } from './../distribuidor/api'\nimport { urlStorage } from './../app/api'\n\nclass ClienteModalCadastroComponent extends React.Component {\n    \n    state = {\n        modalOpen: false,\n        id: null,\n        nome: '',\n        cpf: '',\n        rg: '',\n        email: '',\n        telefone: '',\n        celular: '',\n        nomeEndereco: '',\n        numero: null,\n        complemento: '',\n        bairro: '',\n        cep: '',\n        cidade: '',\n        estado: '',\n        msgError: null,\n        imagemPath: null,\n        image: null,\n        file: null,\n        distribuidores: [],\n        distribuidor: null,\n        distribuidorId: null,\n        msgError: null\n    }\n\n    componentDidMount() {\n        const { clienteId } = this.props.match.params\n        if (clienteId) {\n            get(clienteId).then(res => {\n                const cliente = res.data\n                this.setState({\n                    ...cliente,\n                    ...cliente.endereco,\n                    id: cliente._id,\n                    imagemPath: cliente.imagemPath ? `${urlStorage}/${cliente.imagemPath}` : null,\n                    distribuidorId: cliente.distribuidor._id\n                })\n            })\n        }\n        getAll().then(res => {\n            this.setState({ distribuidores: res.data })\n        })\n    }\n\n    onVoltar = () => {\n        this.props.history.push('/admin');\n    }\n\n    onChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    onChangeImagem = (e) => {\n        let file = e.target.files[0]\n        this.setState({\n            image: URL.createObjectURL(file),\n            file\n        })\n    }\n\n    onDistribuidorSelected = (e, { value }) => {\n        this.setState({\n            distribuidor: value,\n        })\n    }\n\n    onSalvar = () => {\n        const { \n            id, nome, cpf, rg, email, telefone, celular,\n            nomeEndereco, numero, complemento, bairro, cep, cidade, estado,\n            file, distribuidor, distribuidorId\n        } = this.state\n        if (!distribuidor && !distribuidorId) {\n            this.setState({ msgError: 'Por favor, selecione o distribuidor.' })\n        } else {\n            this.setState({ msgError: null })\n            if (id) {\n                update({\n                    distribuidorId: distribuidor ? distribuidor : distribuidorId,\n                    id,\n                    nome,\n                    cpf,\n                    rg,                \n                    email,\n                    telefone,\n                    celular,\n                    endereco: {\n                        nomeEndereco, \n                        numero, \n                        complemento, \n                        cep, \n                        bairro, \n                        cidade,\n                        estado,\n                    },\n                }).then(() => {\n                    this.onVoltar()\n                })\n            } else {\n                create({\n                    distribuidorId: distribuidor,\n                    nome,\n                    cpf,\n                    rg,                \n                    email,\n                    telefone,\n                    celular,\n                    endereco: {\n                        nomeEndereco, \n                        numero, \n                        complemento, \n                        cep, \n                        bairro, \n                        cidade,\n                        estado,\n                    },\n                }).then(res => {\n                    if (file) {\n                        const data = new FormData() \n                        data.append('file', file)\n                        return upload(data, res.data)\n                    } else {\n                        return null\n                    }\n                }).then(() => {\n                    this.onVoltar()\n                })\n            }\n        }\n    }\n\n    img = () => {\n        const { image, imagemPath } = this.state\n        if (image) {\n            return <Image wrapped size='medium' src={image} />\n        } else  if (imagemPath) {\n            return <Image wrapped size='medium' src={imagemPath} />\n        } else {\n            return <Image wrapped size='medium' src='https://react.semantic-ui.com/images/wireframe/square-image.png' />\n        }\n    }\n\n    render() {\n        const { \n            nome, cpf, rg, email, celular, telefone, id, msgError,\n            nomeEndereco, numero, complemento, bairro, cep, cidade, estado,\n            distribuidores\n        } = this.state\n        return (\n            <Container>\n            <Grid>\n                <Grid.Row>\n                    <Grid.Column width={11}>\n                        <Button primary onClick={this.onVoltar}>\n                            <Icon name='angle left' /> Voltar\n                        </Button>\n                    </Grid.Column>\n                    <Grid.Column width={5}>\n                        <Header as='h2'>\n                            Novo Cliente\n                        </Header>\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column width={10}>\n                        <Form style={{ paddingTop: 20}} onSubmit={this.onSalvar}>\n                            <Header as='h3'>Dados pessoais</Header>\n                            <Form.Group>\n                                <Form.Field\n                                    width={8}\n                                    control={Select}\n                                    label='Distribuidor'\n                                    name='distribuidor'\n                                    options={distribuidores.map(dist => {\n                                        return { key: dist._id, text: dist.nome, value: dist._id }\n                                    })}\n                                    onChange={this.onDistribuidorSelected}\n                                />\n                                <Form.Input width={8} label=\"Nome completo\" name=\"nome\" value={nome} onChange={this.onChange}/>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Input width={5} label=\"CPF\" name=\"cpf\" value={cpf} onChange={this.onChange}/>\n                                <Form.Input width={5} label=\"RG\" name=\"rg\" value={rg} onChange={this.onChange}/>\n                                <Form.Input width={6} label=\"Email\" name=\"email\" value={email} onChange={this.onChange}/>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Input width={8} label=\"Telefone\" name=\"telefone\" value={telefone} onChange={this.onChange}/>                                \n                                <Form.Input width={8} label=\"Celular\" name=\"celular\" value={celular} onChange={this.onChange}/>\n                            </Form.Group>\n                            <Header as='h3'>Endereço</Header>\n                            <Form.Group>\n                                <Form.Input width={10} label=\"Endereço\" name=\"nomeEndereco\" value={nomeEndereco} onChange={this.onChange}/>\n                                <Form.Input width={2} label=\"Número\" name=\"numero\" value={numero} onChange={this.onChange}/>\n                                <Form.Input width={4} label=\"Complemento\" name=\"complemento\" value={complemento} onChange={this.onChange}/>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Input width={6} label=\"Bairro\" name=\"bairro\" value={bairro} onChange={this.onChange}/>\n                                <Form.Input width={3} label=\"CEP\" name=\"cep\" value={cep} onChange={this.onChange}/>\n                                <Form.Input width={5} label=\"Cidade\" name=\"cidade\" value={cidade} onChange={this.onChange}/>\n                                <Form.Input width={2} label=\"Estado\" name=\"estado\" value={estado} onChange={this.onChange}/>\n                            </Form.Group>\n                        </Form>\n                    </Grid.Column>\n                    <Grid.Column width={4} >\n                        {this.img()}\n                        {!id && (\n                            <div>\n                                <input\n                                    type=\"file\"\n                                    style={{ display: 'none' }}\n                                    onChange={this.onChangeImagem}\n                                    ref={e => { this.fileInput = e }}/>\n                                <Button attached='bottom' onClick={() => this.fileInput.click()}>Adicionar Foto Perfil</Button>\n                            </div>\n                        )}\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column style={{ paddingBottom: 20 }} >\n                        <Button primary type='submit' onClick={this.onSalvar}>\n                            <Icon name='plus' /> Adicionar\n                        </Button>\n                        { msgError && (\n                            <Message floated='left' compact warning>\n                                {msgError}\n                            </Message>\n                        )}\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </Container>\n        )\n    }\n}\n\nexport default ClienteModalCadastroComponent","import React from 'react'\nimport { Button, Form, Container, Header, Segment, Message } from 'semantic-ui-react'\nimport { loginDistribuidor } from './api'\n\nclass LoginComponent extends React.Component {\n\n    state = {\n        nome: '',\n        senha: '',\n        msgError: null\n    }\n\n    onChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    onLogin = () => {\n        const { nome, senha } = this.state\n        if (nome === '') {\n            this.setState({ msgError: 'Preencher o campo de login.' })\n        } else if (senha === '') {\n            this.setState({ msgError: 'Preencher o campo de senha.' })\n        } else {\n            this.setState({ msgError: null })\n            loginDistribuidor({\n                nome,\n                senha,\n                categoria: 'distribuidor'\n            }).then(res => {\n                let usuario = res.data\n                if (res.data.error) {\n                    if (res.data.error === 'conta_invalid') this.setState({ msgError: 'Login ou senha incorreto' })\n                    else if (res.data.error === 'conta_inactive') this.setState({ msgError: 'Sua conta está inativa' })\n                    else this.setState({ msgError: 'Login ou senha incorreto' })\n                } else if (usuario && usuario.distribuidor.codId) {\n                    this.props.history.push('/distribuidor/' + usuario.distribuidor.codId + '/pedido');\n                    this.setState({ msgError: null })\n                }\n            })\n        }\n    }\n\n    render() {\n        const { nome, senha, msgError } = this.state\n        return(\n            <Container style={{ paddingTop: 20 }}>\n                <Header as='h2'>\n                    Distribuidor\n                </Header>\n                <Segment>\n                    <Form style={{ paddingTop: 20 }}>\n                        <Form.Input width={16} label=\"Login\" name=\"nome\" value={nome} onChange={this.onChange}/>\n                        <Form.Input type='password' width={16} label=\"Senha\" name=\"senha\" value={senha} onChange={this.onChange}/>\n                    </Form>\n                    { msgError && (\n                        <Message info>\n                            <Message.Header>{msgError}</Message.Header>\n                        </Message>\n                    )}     \n                    <Button fluid primary onClick={this.onLogin} style={{ marginTop: 20 }}>Entrar</Button>\n                </Segment>\n            </Container>\n        )\n    }\n}\n\nexport default LoginComponent","import axios from '../app/api'\n\nexport function loginDistribuidor(data) {\n    return axios.post('/conta/login', {\n        nome: data.nome,\n        senha: data.senha,\n        categoria: data.categoria\n    })\n}\n","import React from 'react'\nimport { Button, Form, Icon, Container, Grid, Header, Message, Image, Select } from 'semantic-ui-react'\nimport { create, update, get, upload } from './../cliente/api'\nimport { getOneCodId } from './../distribuidor/api'\nimport { urlStorage } from './../app/api'\n\nclass ClienteModalCadastroMobileComponent extends React.Component {\n    \n    state = {\n        modalOpen: false,\n        id: null,\n        nome: '',\n        cpf: '',\n        rg: '',\n        email: '',\n        telefone: '',\n        celular: '',\n        nomeEndereco: '',\n        numero: null,\n        complemento: '',\n        bairro: '',\n        cep: '',\n        cidade: '',\n        estado: '',\n        imagemPath: null,\n        image: null,\n        file: null,\n        distribuidorCodId: null,\n        distribuidorId: null,\n    }\n\n    componentDidMount() {\n        const { distribuidorId, clienteId } = this.props.match.params\n        this.setState({ distribuidorCodId: distribuidorId })\n        if (clienteId) {\n            get(clienteId).then(res => {\n                const cliente = res.data\n                this.setState({\n                    ...cliente,\n                    ...cliente.endereco,\n                    id: cliente._id,\n                    imagemPath: cliente.imagemPath ? `${urlStorage}/${cliente.imagemPath}` : null,\n                    distribuidorId: cliente.distribuidor._id\n                })\n            })\n        }\n        getOneCodId(distribuidorId).then(res => {\n            this.setState({\n                distribuidorId: res.data._id\n            })\n        })\n    }\n\n    onVoltar = () => {\n        const { distribuidorCodId } = this.state\n        this.props.history.push(`/distribuidor/${distribuidorCodId}/pedido`);\n    }\n\n    onChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    onChangeImagem = (e) => {\n        let file = e.target.files[0]\n        this.setState({\n            image: URL.createObjectURL(file),\n            file\n        })\n    }\n\n\n    onSalvar = () => {\n        const { \n            id, nome, cpf, rg, email, telefone, celular,\n            nomeEndereco, numero, complemento, bairro, cep, cidade, estado,\n            file, distribuidorId\n        } = this.state\n\n        if (id) {\n            update({\n                distribuidorId,\n                id,\n                nome,\n                cpf,\n                rg,                \n                email,\n                telefone,\n                celular,\n                endereco: {\n                    nomeEndereco, \n                    numero, \n                    complemento, \n                    cep, \n                    bairro, \n                    cidade,\n                    estado,\n                },\n            }).then(() => {\n                this.onVoltar()\n            })\n        } else {\n            create({\n                distribuidorId,\n                nome,\n                cpf,\n                rg,                \n                email,\n                telefone,\n                celular,\n                endereco: {\n                    nomeEndereco, \n                    numero, \n                    complemento, \n                    cep, \n                    bairro, \n                    cidade,\n                    estado,\n                },\n            }).then(res => {\n                if (file) {\n                    const data = new FormData() \n                    data.append('file', file)\n                    return upload(data, res.data)\n                } else {\n                    return null\n                }\n            }).then(() => {\n                this.onVoltar()\n            })\n        }\n    }\n\n    render() {\n        const { \n            nome, cpf, rg, email, celular, telefone,\n            nomeEndereco, numero, complemento, bairro, cep, cidade, estado, imagemPath\n        } = this.state\n        return (\n            <Container>\n                <Grid>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Header as='h2' style={{ padding: 10 }}>\n                                <Button circular primary size='medium' floated='left' icon='angle left' onClick={this.onVoltar} />\n                                Cliente\n                            </Header>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Form style={{ paddingTop: 20 }}>\n                        <Grid.Row>\n                            <Grid.Column width={4} >\n                                <input\n                                    type=\"file\"\n                                    style={{ display: 'none' }}\n                                    onChange={this.onChangeImagem}\n                                    ref={e => { this.fileInput = e }}/>\n                                <Button primary onClick={() => this.fileInput.click()}>Adicionar foto</Button>\n                                <Image wrapped size='medium' src={ imagemPath ? imagemPath : 'https://react.semantic-ui.com/images/wireframe/square-image.png'} />\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row style={{ paddingTop: 20 }}>\n                            <Grid.Column>\n                                    <Header as='h4'>Dados pessoais</Header>\n                                    <Form.Input label=\"Nome completo\" name=\"nome\" value={nome} onChange={this.onChange}/>\n                                    <Form.Input label=\"CPF\" name=\"cpf\" value={cpf} onChange={this.onChange}/>\n                                    <Form.Input label=\"RG\" name=\"rg\" value={rg} onChange={this.onChange}/>\n                                    <Form.Input label=\"Email\" name=\"email\" value={email} onChange={this.onChange}/>\n                                    <Form.Input label=\"Telefone\" name=\"telefone\" value={telefone} onChange={this.onChange}/>                                \n                                    <Form.Input label=\"Celular\" name=\"celular\" value={celular} onChange={this.onChange}/>\n                                    <Header as='h4'>Endereço</Header>\n                                    <Form.Input label=\"Endereço\" name=\"nomeEndereco\" value={nomeEndereco} onChange={this.onChange}/>\n                                    <Form.Input label=\"Número\" name=\"numero\" value={numero} onChange={this.onChange}/>\n                                    <Form.Input label=\"Complemento\" name=\"complemento\" value={complemento} onChange={this.onChange}/>\n                                    <Form.Input label=\"Bairro\" name=\"bairro\" value={bairro} onChange={this.onChange}/>\n                                    <Form.Input label=\"CEP\" name=\"cep\" value={cep} onChange={this.onChange}/>\n                                    <Form.Input label=\"Cidade\" name=\"cidade\" value={cidade} onChange={this.onChange}/>\n                                    <Form.Input label=\"Estado\" name=\"estado\" value={estado} onChange={this.onChange}/>\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Form>\n                    <Grid.Row>\n                        <Grid.Column style={{ paddingBottom: 20 }} >\n                            <Button primary type='submit' onClick={this.onSalvar}>\n                                <Icon name='plus' /> Salvar\n                            </Button>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Container>\n        )\n    }\n}\n\nexport default ClienteModalCadastroMobileComponent","import React from 'react'\nimport { Button, Container, Grid, Header} from 'semantic-ui-react'\nimport { get, remove } from './../cliente/api'\n\nclass ClienteModalCadastroMobileComponent extends React.Component {\n    \n    state = {\n        id: null,\n        distribuidorId: null,\n        codId: null,\n        nome: '',\n        cpf: '',\n        rg: '',\n        email: '',\n        telefone: '',\n        celular: '',\n        endereco: {},\n    }\n\n    componentDidMount() {\n        const { distribuidorId, clienteId } = this.props.match.params\n        this.setState({ distribuidorId })\n        if (clienteId) {\n            get(clienteId).then(res => {\n                const cliente = res.data\n                this.setState({\n                    ...cliente,\n                    endereco: {...cliente.endereco},\n                    id: cliente._id,\n                })\n            })\n        }\n    }\n\n    onVoltar = () => {\n        const { distribuidorId } = this.state\n        this.props.history.push(`/distribuidor/${distribuidorId}/pedido`);\n    }\n\n    onEditar = () => {\n        const { distribuidorId, id } = this.state\n        this.props.history.push(`/distribuidor/${distribuidorId}/editar/cliente/${id}`);\n    }\n\n    onDesativar = () => {\n        remove(this.state.id).then(res => {\n            this.onVoltar()\n        })\n    }\n\n    render() {\n        const { \n            nome, cpf, rg, email, celular, telefone,\n            endereco, codId,\n        } = this.state\n        return (\n            <Container>\n                <Grid>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Header as='h2' style={{ padding: 10 }}>\n                                <Button circular primary size='medium' floated='left' icon='angle left' onClick={this.onVoltar} />\n                                Cliente\n                            </Header>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column>\n                        <p>Nome: {nome}</p>\n                        <p>Código: {codId}</p>\n                        <p>CPF: {cpf}</p>\n                        <p>RG: {rg}</p>\n                        <p>E-mail: {email}</p>\n                        <p>Telefone: {telefone}</p>\n                        <p>Celular: {celular}</p>\n                        <p>Endereço: {endereco.nomeEndereco}</p>\n                        <p>Número: {endereco.numero}</p>\n                        <p>Complemento: {endereco.complemento}</p>\n                        <p>Bairro: {endereco.bairro}</p>\n                        <p>CEP: {endereco.cep}</p>\n                        <p>Cidade: {endereco.cidade}</p>\n                        <p>Estado: {endereco.estado}</p>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Button fluid primary onClick={() => this.onEditar()}>Editar</Button>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Button fluid danger onClick={() => this.onDesativar()}>Desativar</Button>\n                        </Grid.Column>\n                    </Grid.Row>                            \n                </Grid>\n            </Container>\n        )\n    }\n}\n\nexport default ClienteModalCadastroMobileComponent","import React from 'react'\nimport { Button, Form, Icon, Container, Grid, Header, Message, Image, Select } from 'semantic-ui-react'\nimport { create, update, get, upload } from './../cliente/api'\nimport { urlStorage } from './../app/api'\n\nclass ClienteModalCadastroComponent extends React.Component {\n    \n    state = {\n        modalOpen: false,\n        id: null,\n        nome: '',\n        cpf: '',\n        rg: '',\n        email: '',\n        telefone: '',\n        celular: '',\n        nomeEndereco: '',\n        numero: null,\n        complemento: '',\n        bairro: '',\n        cep: '',\n        cidade: '',\n        estado: '',\n        msgError: null,\n        imagemPath: null,\n        image: null,\n        file: null,\n        distribuidorId: null,\n        msgError: null\n    }\n\n    componentDidMount() {\n        const { distribuidorId, clienteId } = this.props.match.params\n        this.setState({ distribuidorId })\n        if (clienteId) {\n            get(clienteId).then(res => {\n                const cliente = res.data\n                this.setState({\n                    ...cliente,\n                    ...cliente.endereco,\n                    id: cliente._id,\n                    imagemPath: cliente.imagemPath ? `${urlStorage}/${cliente.imagemPath}` : null,\n                })\n            })\n        }\n    }\n\n    onVoltar = () => {\n        this.props.history.push('/admin/distribuidor');\n    }\n\n    onChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    onChangeImagem = (e) => {\n        let file = e.target.files[0]\n        this.setState({\n            image: URL.createObjectURL(file),\n            file\n        })\n    }\n\n    onSalvar = () => {\n        const { \n            id, nome, cpf, rg, email, telefone, celular,\n            nomeEndereco, numero, complemento, bairro, cep, cidade, estado,\n            file, distribuidorId\n        } = this.state\n        if (id) {\n            update({\n                distribuidorId,\n                id,\n                nome,\n                cpf,\n                rg,                \n                email,\n                telefone,\n                celular,\n                endereco: {\n                    nomeEndereco, \n                    numero, \n                    complemento, \n                    cep, \n                    bairro, \n                    cidade,\n                    estado,\n                },\n            }).then(() => {\n                this.onVoltar()\n            })\n        } else {\n            create({\n                distribuidorId,\n                nome,\n                cpf,\n                rg,                \n                email,\n                telefone,\n                celular,\n                endereco: {\n                    nomeEndereco, \n                    numero, \n                    complemento, \n                    cep, \n                    bairro, \n                    cidade,\n                    estado,\n                },\n            }).then(res => {\n                if (file) {\n                    const data = new FormData() \n                    data.append('file', file)\n                    return upload(data, res.data)\n                } else {\n                    return null\n                }\n            }).then(() => {\n                this.onVoltar()\n            })\n        }\n    }\n\n    img = () => {\n        const { image, imagemPath } = this.state\n        if (image) {\n            return <Image wrapped size='medium' src={image} />\n        } else  if (imagemPath) {\n            return <Image wrapped size='medium' src={imagemPath} />\n        } else {\n            return <Image wrapped size='medium' src='https://react.semantic-ui.com/images/wireframe/square-image.png' />\n        }\n    }\n\n    render() {\n        const { \n            nome, cpf, rg, email, celular, telefone, id, msgError,\n            nomeEndereco, numero, complemento, bairro, cep, cidade, estado,\n            distribuidores\n        } = this.state\n        return (\n            <Container>\n            <Grid>\n                <Grid.Row>\n                    <Grid.Column width={11}>\n                        <Button primary onClick={this.onVoltar}>\n                            <Icon name='angle left' /> Voltar\n                        </Button>\n                    </Grid.Column>\n                    <Grid.Column width={5}>\n                        <Header as='h2'>\n                            Novo Cliente\n                        </Header>\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column width={10}>\n                        <Form style={{ paddingTop: 20}} onSubmit={this.onSalvar}>\n                            <Header as='h3'>Dados pessoais</Header>\n                            <Form.Input width={16} label=\"Nome completo\" name=\"nome\" value={nome} onChange={this.onChange}/>\n                            <Form.Group>\n                                <Form.Input width={5} label=\"CPF\" name=\"cpf\" value={cpf} onChange={this.onChange}/>\n                                <Form.Input width={5} label=\"RG\" name=\"rg\" value={rg} onChange={this.onChange}/>\n                                <Form.Input width={6} label=\"Email\" name=\"email\" value={email} onChange={this.onChange}/>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Input width={8} label=\"Telefone\" name=\"telefone\" value={telefone} onChange={this.onChange}/>                                \n                                <Form.Input width={8} label=\"Celular\" name=\"celular\" value={celular} onChange={this.onChange}/>\n                            </Form.Group>\n                            <Header as='h3'>Endereço</Header>\n                            <Form.Group>\n                                <Form.Input width={10} label=\"Endereço\" name=\"nomeEndereco\" value={nomeEndereco} onChange={this.onChange}/>\n                                <Form.Input width={2} label=\"Número\" name=\"numero\" value={numero} onChange={this.onChange}/>\n                                <Form.Input width={4} label=\"Complemento\" name=\"complemento\" value={complemento} onChange={this.onChange}/>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Input width={6} label=\"Bairro\" name=\"bairro\" value={bairro} onChange={this.onChange}/>\n                                <Form.Input width={3} label=\"CEP\" name=\"cep\" value={cep} onChange={this.onChange}/>\n                                <Form.Input width={5} label=\"Cidade\" name=\"cidade\" value={cidade} onChange={this.onChange}/>\n                                <Form.Input width={2} label=\"Estado\" name=\"estado\" value={estado} onChange={this.onChange}/>\n                            </Form.Group>\n                        </Form>\n                    </Grid.Column>\n                    <Grid.Column width={4} >\n                        {this.img()}\n                        {!id && (\n                            <div>\n                                <input\n                                    type=\"file\"\n                                    style={{ display: 'none' }}\n                                    onChange={this.onChangeImagem}\n                                    ref={e => { this.fileInput = e }}/>\n                                <Button attached='bottom' onClick={() => this.fileInput.click()}>Adicionar Foto Perfil</Button>\n                            </div>\n                        )}\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column style={{ paddingBottom: 20 }} >\n                        <Button primary type='submit' onClick={this.onSalvar}>\n                            <Icon name='plus' /> Adicionar\n                        </Button>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </Container>\n        )\n    }\n}\n\nexport default ClienteModalCadastroComponent","import React from 'react';\nimport { Switch, Redirect } from 'react-router-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Painel from '../components/painel';\nimport CompraComponent from '../produto/CompraComponent';\nimport CarrinhoComponent from '../carrinho/ListaComponent';\nimport PedidoComponent from '../pedido/ListaComponent';\nimport DetalhesComponent from '../pedido/DetalheComponent';\nimport NavBar from '../components/NavBar';\nimport ClienteComponent from '../cliente/ListaComponent';\nimport DistribuidorComponent from '../distribuidor/ListaComponent';\nimport DistribuidorCadastroComponent from '../distribuidor/CadastroComponent';\nimport EstoqueComponent from '../produto/EstoqueComponent';\nimport CategoriaComponent from '../categoria/ListaComponent';\nimport ClienteCadastroComponent from '../cliente/CadastroComponent';\nimport LoginDistribuidorComponent from '../conta/LoginDistribuidorComponent';\nimport CadastroClienteComponent from '../pedido/CadastroClienteComponent';\nimport DetalheClienteComponent from '../pedido/DetalheClienteComponent';\nimport DistribuidorCadastroClienteComponent from '../distribuidor/CadastroClienteComponent';\n\n\nexport default class extends React.Component {\n    render() {\n        return (\n            <Router>\n                <Switch>\n                    <Route path=\"/distribuidor\" render={() => (\n                        <div>\n                            <Route path=\"/distribuidor\" component={LoginDistribuidorComponent} exact />\n                            <Route path=\"/distribuidor/:distribuidorId/cliente/:clienteId\" component={CompraComponent} exact />\n                            <Route path=\"/distribuidor/:distribuidorId/cliente/:clienteId/carrinho\" component={CarrinhoComponent} />\n                            <Route path=\"/distribuidor/:distribuidorId/pedido\" component={PedidoComponent} exact/>\n                            <Route path=\"/distribuidor/:distribuidorId/pedido/:id/detalhe\" component={DetalhesComponent} />\n                            <Route path=\"/distribuidor/:distribuidorId/cadastrar/cliente\" component={CadastroClienteComponent} exact />\n                            <Route path=\"/distribuidor/:distribuidorId/editar/cliente/:clienteId\" component={CadastroClienteComponent} />\n                            <Route path=\"/distribuidor/:distribuidorId/detalhe/cliente/:clienteId\" component={DetalheClienteComponent} />\n                        </div>\n                    )} />\n                    <Route path=\"/admin\" render={() => (\n                        <div>\n                            <NavBar />\n                            <Route path=\"/admin\" component={ClienteComponent} exact />\n                            <Route path=\"/admin/cliente/cadastrar\" component={ClienteCadastroComponent} exact/>\n                            <Route path=\"/admin/cliente/:clienteId/editar\" component={ClienteCadastroComponent} exact/>\n                            <Route path=\"/admin/distribuidor\" component={DistribuidorComponent} exact />\n                            <Route path=\"/admin/distribuidor/cadastrar\" component={DistribuidorCadastroComponent} exact/>\n                            <Route path=\"/admin/distribuidor/:distribuidorId/editar\" component={DistribuidorCadastroComponent} />\n                            <Route path=\"/admin/distribuidor/:distribuidorId/cliente/cadastrar\" component={DistribuidorCadastroClienteComponent} />\n                            <Route path=\"/admin/distribuidor/:distribuidorId/cliente/:clienteId/editar\" component={DistribuidorCadastroClienteComponent} />\n                            <Route path=\"/admin/produto\" component={EstoqueComponent} exact />\n                            <Route path=\"/admin/categoria\" component={CategoriaComponent} exact />\n                        </div>\n                    )} />\n                    <Redirect exact to='/' component={Painel} />\n                </Switch>\n            </Router>\n        )\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './app/route'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}